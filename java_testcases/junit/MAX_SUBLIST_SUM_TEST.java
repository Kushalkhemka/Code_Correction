package java_testcases.junit;

import static org.junit.Assert.*;
import org.junit.Test;
import java_programs.MAX_SUBLIST_SUM;
import com.google.gson.JsonParser;

public class MAX_SUBLIST_SUM_TEST {
  /**
   * Junit test case for MAX_SUBLIST_SUM generated by tests generator.
   */
  @Test(timeout = 100)
  public void max_sublist_sum_test1() {
    try {
      Object actual = MAX_SUBLIST_SUM.max_sublist_sum(new int[]{4,-5,2,1,-1,3});
      assertEquals("5",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void max_sublist_sum_test2() {
    try {
      Object actual = MAX_SUBLIST_SUM.max_sublist_sum(new int[]{0,-1,2,-1,3,-1,0});
      assertEquals("4",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void max_sublist_sum_test3() {
    try {
      Object actual = MAX_SUBLIST_SUM.max_sublist_sum(new int[]{3,4,5});
      assertEquals("12",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void max_sublist_sum_test4() {
    try {
      Object actual = MAX_SUBLIST_SUM.max_sublist_sum(new int[]{4,-2,-8,5,-2,7,7,2,-6,5});
      assertEquals("19",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void max_sublist_sum_test5() {
    try {
      Object actual = MAX_SUBLIST_SUM.max_sublist_sum(new int[]{-4,-4,-5});
      assertEquals("0",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

  @Test(timeout = 100)
  public void max_sublist_sum_test6() {
    try {
      Object actual = MAX_SUBLIST_SUM.max_sublist_sum(new int[]{-2,1,-3,4,-1,2,1,-5,4});
      assertEquals("6",actual.toString() );
    }
    catch(IllegalArgumentException e) {
      throw new IllegalArgumentException("Arguments are illegal!") ;
    }
  }

}
