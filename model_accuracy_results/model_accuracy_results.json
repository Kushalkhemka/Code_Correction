{
    "programs": {
        "bitcount": {
            "buggy": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.017237424850464,
                "error": "Timeout after 30 seconds"
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.4759633541107178
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.4080512523651123
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.4119691848754883
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.2509794235229492
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.48297929763793945
            }
        },
        "breadth_first_search": {
            "buggy": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "test3: IndexError - pop from an empty deque"
                ],
                "elapsed_time": 0.468947172164917
            },
            "Claude 3.5": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "test3: IndexError - pop from an empty deque"
                ],
                "elapsed_time": 0.6779561042785645
            },
            "Claude 3.7": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "test3: IndexError - pop from an empty deque"
                ],
                "elapsed_time": 0.6429510116577148
            },
            "Deepseek": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "test3: IndexError - pop from an empty deque"
                ],
                "elapsed_time": 0.8187952041625977
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.5969491004943848
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.7839481830596924
            }
        },
        "bucketsort": {
            "buggy": {
                "pass_rate": 0.14285714285714285,
                "passed": 1,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [1, 2, 3, 5, 9, 11], got [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5]",
                    "Test 3: Expected [2, 2, 3, 3, 4, 5], got [0, 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5]",
                    "Test 4: Expected [1, 1, 2, 2, 3, 4, 4, 6, 9, 9], got [0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9]",
                    "Test 5: Expected [11, 12, 13, 14, 15, 16, 17, 18, 19, 20], got [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]",
                    "Test 6: Expected [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], got [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]",
                    "Test 7: Expected [0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9], got [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 10, 10, 10, 10, 10]"
                ],
                "elapsed_time": 0.12398838996887207
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.5779561996459961
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.5359697341918945
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.5819563865661621
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.28197407722473145
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.6359522342681885
            }
        },
        "depth_first_search": {
            "buggy": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "test5: RecursionError - maximum recursion depth exceeded while calling a Python object"
                ],
                "elapsed_time": 0.29996824264526367
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.8769252300262451
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.49497246742248535
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.6139543056488037
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.48195648193359375
            },
            "O4-Mini": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "test5: RecursionError - maximum recursion depth exceeded in comparison"
                ],
                "elapsed_time": 0.42397379875183105
            }
        },
        "detect_cycle": {
            "buggy": {
                "pass_rate": 0.8333333333333334,
                "passed": 5,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "test4: AttributeError - 'NoneType' object has no attribute 'successor'"
                ],
                "elapsed_time": 0.5039610862731934
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.6919491291046143
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.7189571857452393
            },
            "Deepseek": {
                "pass_rate": 0.8333333333333334,
                "passed": 5,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "test4: AttributeError - 'NoneType' object has no attribute 'successor'"
                ],
                "elapsed_time": 0.6289510726928711
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.6459400653839111
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.40697216987609863
            }
        },
        "find_first_in_sorted": {
            "buggy": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.118476629257202,
                "error": "Timeout after 30 seconds"
            },
            "Claude 3.5": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.43553590774536,
                "error": "Timeout after 30 seconds"
            },
            "Claude 3.7": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.570504665374756,
                "error": "Timeout after 30 seconds"
            },
            "Deepseek": {
                "pass_rate": 0.7142857142857143,
                "passed": 5,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected 2, got -1",
                    "Test 7: Expected 7, got -1"
                ],
                "elapsed_time": 1.0120761394500732
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.2903892993927002
            },
            "O4-Mini": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.86481547355652,
                "error": "Timeout after 30 seconds"
            }
        },
        "find_in_sorted": {
            "buggy": {
                "pass_rate": 0.7142857142857143,
                "passed": 5,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 2: Exception - maximum recursion depth exceeded in comparison",
                    "Test 7: Exception - maximum recursion depth exceeded in comparison"
                ],
                "elapsed_time": 0.8889331817626953
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.466820240020752
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.4578962326049805
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.9224839210510254
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.9401290416717529
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 3.9930059909820557
            }
        },
        "flatten": {
            "buggy": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 2: Expected [], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 3: Expected [1, 1], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 4: Expected [1, 2, 3, 4], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 5: Expected [1, 4, 6], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 6: Expected ['moe', 'curly', 'larry'], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 7: Expected ['a', 'b', 'c', 'd', 'e'], got <generator object flatten at 0x00000185110FA8F0>"
                ],
                "elapsed_time": 2.7467455863952637
            },
            "Claude 3.5": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 2: Expected [], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 3: Expected [1, 1], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 4: Expected [1, 2, 3, 4], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 5: Expected [1, 4, 6], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 6: Expected ['moe', 'curly', 'larry'], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 7: Expected ['a', 'b', 'c', 'd', 'e'], got <generator object flatten at 0x00000185110FA8F0>"
                ],
                "elapsed_time": 3.3787477016448975
            },
            "Claude 3.7": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 2: Expected [], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 3: Expected [1, 1], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 4: Expected [1, 2, 3, 4], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 5: Expected [1, 4, 6], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 6: Expected ['moe', 'curly', 'larry'], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 7: Expected ['a', 'b', 'c', 'd', 'e'], got <generator object flatten at 0x00000185110FA8F0>"
                ],
                "elapsed_time": 5.194575548171997
            },
            "Deepseek": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 2: Expected [], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 3: Expected [1, 1], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 4: Expected [1, 2, 3, 4], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 5: Expected [1, 4, 6], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 6: Expected ['moe', 'curly', 'larry'], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 7: Expected ['a', 'b', 'c', 'd', 'e'], got <generator object flatten at 0x00000185110FA8F0>"
                ],
                "elapsed_time": 4.235272169113159
            },
            "O3-Mini": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 2: Expected [], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 3: Expected [1, 1], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 4: Expected [1, 2, 3, 4], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 5: Expected [1, 4, 6], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 6: Expected ['moe', 'curly', 'larry'], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 7: Expected ['a', 'b', 'c', 'd', 'e'], got <generator object flatten at 0x00000185110FA8F0>"
                ],
                "elapsed_time": 4.6216511726379395
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.224471807479858
            }
        },
        "gcd": {
            "buggy": {
                "pass_rate": 0.16666666666666666,
                "passed": 1,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "Test 2: Exception - maximum recursion depth exceeded in comparison",
                    "Test 3: Exception - maximum recursion depth exceeded in comparison",
                    "Test 4: Exception - maximum recursion depth exceeded in comparison",
                    "Test 5: Exception - maximum recursion depth exceeded in comparison",
                    "Test 6: Exception - maximum recursion depth exceeded in comparison"
                ],
                "elapsed_time": 0.7379515171051025
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.18969202041626
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.36482572555542
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.8318641185760498
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.8437850475311279
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.167839288711548
            }
        },
        "get_factors": {
            "buggy": {
                "pass_rate": 0.09090909090909091,
                "passed": 1,
                "total": 11,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [2, 2, 5, 5], got [2, 2, 5]",
                    "Test 3: Expected [101], got []",
                    "Test 4: Expected [2, 2, 2, 13], got [2, 2, 2]",
                    "Test 5: Expected [2], got []",
                    "Test 6: Expected [3], got []",
                    "Test 7: Expected [17], got []",
                    "Test 8: Expected [3, 3, 7], got [3, 3]",
                    "Test 9: Expected [2, 37], got [2]",
                    "Test 10: Expected [73], got []",
                    "Test 11: Expected [3, 3, 1093], got [3, 3]"
                ],
                "elapsed_time": 2.1238391399383545
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 11,
                "total": 11,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.4681878089904785
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 11,
                "total": 11,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.960375070571899
            },
            "Deepseek": {
                "pass_rate": 0.09090909090909091,
                "passed": 1,
                "total": 11,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [2, 2, 5, 5], got [2, 2, 5]",
                    "Test 3: Expected [101], got []",
                    "Test 4: Expected [2, 2, 2, 13], got [2, 2, 2]",
                    "Test 5: Expected [2], got []",
                    "Test 6: Expected [3], got []",
                    "Test 7: Expected [17], got []",
                    "Test 8: Expected [3, 3, 7], got [3, 3]",
                    "Test 9: Expected [2, 37], got [2]",
                    "Test 10: Expected [73], got []",
                    "Test 11: Expected [3, 3, 1093], got [3, 3]"
                ],
                "elapsed_time": 3.469585418701172
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 11,
                "total": 11,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.7390620708465576
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 11,
                "total": 11,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.5548312664031982
            }
        },
        "hanoi": {
            "buggy": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 2)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 3), (1, 2), (2, 1)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 2), (1, 3), (3, 1), (1, 2), (2, 3), (2, 1), (1, 2)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 3), (1, 2), (2, 1), (1, 3), (3, 2), (3, 1), (1, 3), (1, 2), (2, 1), (2, 3), (3, 2), (2, 1), (1, 3), (1, 2), (2, 1)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 2), (1, 3), (3, 1)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 3), (1, 2), (2, 3)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 1), (3, 2), (2, 3)]"
                ],
                "elapsed_time": 1.185807704925537
            },
            "Claude 3.5": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 3)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 3), (1, 2), (3, 2)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 2), (1, 1), (2, 1)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 2), (3, 1), (2, 1)]"
                ],
                "elapsed_time": 1.9789466857910156
            },
            "Claude 3.7": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 3)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 3), (1, 2), (3, 2)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 2), (1, 1), (2, 1)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 2), (3, 1), (2, 1)]"
                ],
                "elapsed_time": 2.818387985229492
            },
            "Deepseek": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 3)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 3), (1, 2), (3, 2)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 2), (1, 1), (2, 1)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 2), (3, 1), (2, 1)]"
                ],
                "elapsed_time": 2.247840642929077
            },
            "O3-Mini": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 3)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 3), (1, 2), (3, 2)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 2), (1, 1), (2, 1)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 2), (3, 1), (2, 1)]"
                ],
                "elapsed_time": 2.772796869277954
            },
            "O4-Mini": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 3)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 3), (1, 2), (3, 2)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 2), (1, 1), (2, 1)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 2), (3, 1), (2, 1)]"
                ],
                "elapsed_time": 3.4037482738494873
            }
        },
        "is_valid_parenthesization": {
            "buggy": {
                "pass_rate": 0.6666666666666666,
                "passed": 2,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "Test 3: Expected False, got True"
                ],
                "elapsed_time": 1.2309119701385498
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.163649559020996
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.1794121265411377
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.4718191623687744
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.192821741104126
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.157923698425293
            }
        },
        "kheapsort": {
            "buggy": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FAC70>"
                ],
                "elapsed_time": 1.0607993602752686
            },
            "Claude 3.5": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FA9D0>"
                ],
                "elapsed_time": 2.2668254375457764
            },
            "Claude 3.7": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FAC70>"
                ],
                "elapsed_time": 3.435279607772827
            },
            "Deepseek": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FA9D0>"
                ],
                "elapsed_time": 3.2553696632385254
            },
            "O3-Mini": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FAC70>"
                ],
                "elapsed_time": 1.69203519821167
            },
            "O4-Mini": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FA9D0>"
                ],
                "elapsed_time": 3.2583506107330322
            }
        },
        "knapsack": {
            "buggy": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.40220618247986,
                "error": "Timeout after 30 seconds"
            },
            "Claude 3.5": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.576412677764893,
                "error": "Timeout after 30 seconds"
            },
            "Claude 3.7": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 31.656757593154907,
                "error": "Timeout after 30 seconds"
            },
            "Deepseek": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 32.25870490074158,
                "error": "Timeout after 30 seconds"
            },
            "O3-Mini": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 32.440934896469116,
                "error": "Timeout after 30 seconds"
            },
            "O4-Mini": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 34.05847883224487,
                "error": "Timeout after 30 seconds"
            }
        },
        "kth": {
            "buggy": {
                "pass_rate": 0.42857142857142855,
                "passed": 3,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Exception - list index out of range",
                    "Test 2: Exception - list index out of range",
                    "Test 6: Exception - list index out of range",
                    "Test 7: Exception - list index out of range"
                ],
                "elapsed_time": 1.120328664779663
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.438626527786255
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.479920148849487
            },
            "Deepseek": {
                "pass_rate": 0.2857142857142857,
                "passed": 2,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Exception - list index out of range",
                    "Test 2: Exception - list index out of range",
                    "Test 3: Exception - list index out of range",
                    "Test 6: Exception - list index out of range",
                    "Test 7: Exception - list index out of range"
                ],
                "elapsed_time": 8.439801454544067
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 3.255850315093994
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.154221296310425
            }
        },
        "lcs_length": {
            "buggy": {
                "pass_rate": 0.1111111111111111,
                "passed": 1,
                "total": 9,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected 2, got 1",
                    "Test 2: Expected 4, got 1",
                    "Test 4: Expected 3, got 1",
                    "Test 5: Expected 3, got 1",
                    "Test 6: Expected 7, got 1",
                    "Test 7: Expected 6, got 1",
                    "Test 8: Expected 3, got 2",
                    "Test 9: Expected 3, got 1"
                ],
                "elapsed_time": 2.638702154159546
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 12.484743118286133
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.82619857788086
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.240259647369385
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 3.2370216846466064
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.9676597118377686
            }
        },
        "levenshtein": {
            "buggy": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.23311710357666,
                "error": "Timeout after 30 seconds"
            },
            "Claude 3.5": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 31.648900270462036,
                "error": "Timeout after 30 seconds"
            },
            "Claude 3.7": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 43.015456199645996,
                "error": "Timeout after 30 seconds"
            },
            "Deepseek": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 36.21752309799194,
                "error": "Timeout after 30 seconds"
            },
            "O3-Mini": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.732017278671265,
                "error": "Timeout after 30 seconds"
            },
            "O4-Mini": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 34.64380669593811,
                "error": "Timeout after 30 seconds"
            }
        },
        "lis": {
            "buggy": {
                "pass_rate": 0.6666666666666666,
                "passed": 8,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 9: Expected 3, got 2",
                    "Test 10: Expected 6, got 5",
                    "Test 11: Expected 3, got 1",
                    "Test 12: Expected 4, got 3"
                ],
                "elapsed_time": 5.1839799880981445
            },
            "Claude 3.5": {
                "pass_rate": 0.3333333333333333,
                "passed": 4,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 3: Exception - 3",
                    "Test 5: Exception - 3",
                    "Test 7: Exception - 3",
                    "Test 8: Exception - 3",
                    "Test 9: Exception - 3",
                    "Test 10: Exception - 3",
                    "Test 11: Exception - 3",
                    "Test 12: Exception - 3"
                ],
                "elapsed_time": 7.002519845962524
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 12,
                "total": 12,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.242931365966797
            },
            "Deepseek": {
                "pass_rate": 0.6666666666666666,
                "passed": 8,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 9: Expected 3, got 2",
                    "Test 10: Expected 6, got 5",
                    "Test 11: Expected 3, got 1",
                    "Test 12: Expected 4, got 3"
                ],
                "elapsed_time": 23.038986682891846
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 12,
                "total": 12,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 3.95855712890625
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 12,
                "total": 12,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 11.323349237442017
            }
        },
        "longest_common_subsequence": {
            "buggy": {
                "pass_rate": 0.6,
                "passed": 6,
                "total": 10,
                "success": false,
                "failed_tests": [
                    "Test 4: Expected tsitest, got tiitest",
                    "Test 6: Expected bcba, got bbdab",
                    "Test 7: Expected TAAG, got TAAGC",
                    "Test 8: Expected BCBA, got BBDAB"
                ],
                "elapsed_time": 16.258847951889038
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 17.308419466018677
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 19.291399717330933
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.812755107879639
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.53066349029541
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 23.3413348197937
            }
        },
        "max_sublist_sum": {
            "buggy": {
                "pass_rate": 0.3333333333333333,
                "passed": 2,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected 5, got 4",
                    "Test 2: Expected 4, got 3",
                    "Test 4: Expected 19, got 13",
                    "Test 6: Expected 6, got 2"
                ],
                "elapsed_time": 3.5747761726379395
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 22.068963766098022
            },
            "Claude 3.7": {
                "pass_rate": 0.8333333333333334,
                "passed": 5,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "Test 5: Expected 0, got -4"
                ],
                "elapsed_time": 6.03565788269043
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 11.212536334991455
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 12.65541696548462
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.432075262069702
            }
        },
        "mergesort": {
            "buggy": {
                "pass_rate": 0.07142857142857142,
                "passed": 1,
                "total": 14,
                "success": false,
                "failed_tests": [
                    "Test 2: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 3: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 4: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 5: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 6: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 7: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 8: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 9: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 10: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 11: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 12: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 13: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 14: Exception - maximum recursion depth exceeded while calling a Python object"
                ],
                "elapsed_time": 393.0960865020752
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 14,
                "total": 14,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.466949224472046
            },
            "Claude 3.7": {
                "pass_rate": 0.07142857142857142,
                "passed": 1,
                "total": 14,
                "success": false,
                "failed_tests": [
                    "Test 2: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 3: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 4: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 5: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 6: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 7: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 8: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 9: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 10: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 11: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 12: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 13: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 14: Exception - maximum recursion depth exceeded while calling a Python object"
                ],
                "elapsed_time": 9.261280059814453
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 14,
                "total": 14,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.003373146057129
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 14,
                "total": 14,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.216119050979614
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 14,
                "total": 14,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.458911180496216
            }
        },
        "minimum_spanning_tree": {
            "buggy": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "test1: RuntimeError - Set changed size during iteration",
                    "test2: RuntimeError - Set changed size during iteration",
                    "test3: RuntimeError - Set changed size during iteration"
                ],
                "elapsed_time": 17.17550539970398
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 26.29118585586548
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 13.596894264221191
            },
            "Deepseek": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "test1: RuntimeError - Set changed size during iteration",
                    "test2: RuntimeError - Set changed size during iteration",
                    "test3: RuntimeError - Set changed size during iteration"
                ],
                "elapsed_time": 37.377984046936035
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.676922798156738
            },
            "O4-Mini": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "test1: RuntimeError - Set changed size during iteration",
                    "test2: RuntimeError - Set changed size during iteration",
                    "test3: RuntimeError - Set changed size during iteration"
                ],
                "elapsed_time": 23.051825761795044
            }
        },
        "next_palindrome": {
            "buggy": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "Test 5: Expected [1, 0, 0, 1], got [1, 0, 0, 0, 1]"
                ],
                "elapsed_time": 4.36198353767395
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.770956039428711
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.48212742805481
            },
            "Deepseek": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "Test 5: Expected [1, 0, 0, 1], got [1, 0, 0, 0, 1]"
                ],
                "elapsed_time": 13.358208179473877
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.77060079574585
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.881778001785278
            }
        },
        "next_permutation": {
            "buggy": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [3, 4, 1, 2], got [3, 1, 2, 4]",
                    "Test 2: Expected [3, 6, 1, 2, 5], got [3, 1, 5, 2, 6]",
                    "Test 3: Expected [3, 6, 2, 5], got [3, 2, 5, 6]",
                    "Test 4: Expected [4, 5, 1, 9, 7], got [1, 9, 7, 4, 5]",
                    "Test 5: Expected [4, 7, 1, 5, 8], got [4, 1, 5, 7, 8]",
                    "Test 6: Expected [9, 5, 6, 1, 2], got [9, 5, 1, 2, 6]",
                    "Test 7: Expected [44, 5, 1, 9, 7], got None",
                    "Test 8: Expected [3, 5, 4], got None"
                ],
                "elapsed_time": 4.406303644180298
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 8,
                "total": 8,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.900464534759521
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 8,
                "total": 8,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.5121941566467285
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 8,
                "total": 8,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.420088052749634
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 8,
                "total": 8,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.969744443893433
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 8,
                "total": 8,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.663089990615845
            }
        },
        "node": {
            "buggy": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 4.718792200088501,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            },
            "Claude 3.5": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 1.7930335998535156,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            },
            "Claude 3.7": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 1.86142897605896,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            },
            "Deepseek": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 9.105085134506226,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            },
            "O3-Mini": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 5.49877667427063,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            },
            "O4-Mini": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 6.233888864517212,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            }
        },
        "pascal": {
            "buggy": {
                "pass_rate": 0.2,
                "passed": 1,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1], [1, 1]], got [[1], [1]]",
                    "Test 3: Exception - list index out of range",
                    "Test 4: Exception - list index out of range",
                    "Test 5: Exception - list index out of range"
                ],
                "elapsed_time": 4.256811857223511
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.441570043563843
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.708238124847412
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.213220834732056
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.7519562244415283
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.18605899810791
            }
        },
        "possible_change": {
            "buggy": {
                "pass_rate": 0.1,
                "passed": 1,
                "total": 10,
                "success": false,
                "failed_tests": [
                    "Test 2: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 3: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 4: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 5: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 6: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 7: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 8: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 9: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 10: Exception - not enough values to unpack (expected at least 1, got 0)"
                ],
                "elapsed_time": 1.6631968021392822
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.552531003952026
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 17.812744140625
            },
            "Deepseek": {
                "pass_rate": 0.1,
                "passed": 1,
                "total": 10,
                "success": false,
                "failed_tests": [
                    "Test 2: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 3: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 4: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 5: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 6: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 7: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 8: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 9: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 10: Exception - not enough values to unpack (expected at least 1, got 0)"
                ],
                "elapsed_time": 7.237210035324097
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.974000930786133
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 21.75093364715576
            }
        },
        "powerset": {
            "buggy": {
                "pass_rate": 0.2,
                "passed": 1,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [[], ['c'], ['b'], ['b', 'c'], ['a'], ['a', 'c'], ['a', 'b'], ['a', 'b', 'c']], got [['a', 'b', 'c']]",
                    "Test 2: Expected [[], ['b'], ['a'], ['a', 'b']], got [['a', 'b']]",
                    "Test 3: Expected [[], ['a']], got [['a']]",
                    "Test 5: Expected [[], ['m'], ['z'], ['z', 'm'], ['df'], ['df', 'm'], ['df', 'z'], ['df', 'z', 'm'], ['x'], ['x', 'm'], ['x', 'z'], ['x', 'z', 'm'], ['x', 'df'], ['x', 'df', 'm'], ['x', 'df', 'z'], ['x', 'df', 'z', 'm']], got [['x', 'df', 'z', 'm']]"
                ],
                "elapsed_time": 6.006509065628052
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.338780164718628
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.50675344467163
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 27.32011342048645
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.023864269256592
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.882094144821167
            }
        },
        "quicksort": {
            "buggy": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.144341468811035
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.441301107406616
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 17.48459219932556
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 17.958157062530518
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.283369064331055
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.812443971633911
            }
        },
        "reverse_linked_list": {
            "buggy": {
                "pass_rate": 0.3333333333333333,
                "passed": 1,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "test1: AssertionError - ",
                    "test2: AssertionError - "
                ],
                "elapsed_time": 4.448293924331665
            },
            "Claude 3.5": {
                "pass_rate": 0.3333333333333333,
                "passed": 1,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "test1: AttributeError - 'Node' object has no attribute 'next'",
                    "test2: AttributeError - 'Node' object has no attribute 'next'"
                ],
                "elapsed_time": 10.912369966506958
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.2620460987091064
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.423747301101685
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.195421934127808
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.654613494873047
            }
        },
        "rpn_eval": {
            "buggy": {
                "pass_rate": 0.5,
                "passed": 3,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected 4.0, got 0.25",
                    "Test 3: Expected 8.0, got -8.0",
                    "Test 6: Expected 14.0, got -14.0"
                ],
                "elapsed_time": 6.979104280471802
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 17.194079399108887
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 10.06158185005188
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.68222713470459
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 10.91361665725708
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 20.541259050369263
            }
        },
        "shortest_path_length": {
            "buggy": {
                "pass_rate": 0.5,
                "passed": 2,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "test1: AssertionError - ",
                    "test2: AssertionError - "
                ],
                "elapsed_time": 3.31355619430542
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.116385459899902
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 13.945521593093872
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 10.971505880355835
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.188802242279053
            },
            "O4-Mini": {
                "pass_rate": 0.5,
                "passed": 2,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "test1: AssertionError - ",
                    "test2: AssertionError - "
                ],
                "elapsed_time": 12.678296327590942
            }
        },
        "shortest_path_lengths": {
            "buggy": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "test1: AssertionError - ",
                    "test2: AssertionError - ",
                    "test3: AssertionError - ",
                    "test4: AssertionError - "
                ],
                "elapsed_time": 16.899253606796265
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 10.111351490020752
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 13.95895528793335
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 18.935714960098267
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 23.05413556098938
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 909.5144577026367
            }
        },
        "shortest_paths": {
            "buggy": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "test1: AssertionError - ",
                    "test2: AssertionError - ",
                    "test3: AssertionError - "
                ],
                "elapsed_time": 21.13116717338562
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.874035596847534
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.520777940750122
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 23.129811763763428
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 28.779543161392212
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 19.151514768600464
            }
        },
        "shunting_yard": {
            "buggy": {
                "pass_rate": 0.3333333333333333,
                "passed": 2,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "Test 3: Expected [10, 5, '-', 2, '-'], got [10, 5, 2]",
                    "Test 4: Expected [34, 12, 5, '/', '-'], got [34, 12, 5]",
                    "Test 5: Expected [4, 9, 9, '*', '+', 10, '-', 13, '+'], got [4, 9, 9, 10, 13]",
                    "Test 6: Expected [7, 43, '*', 7, '-', 13, 7, '/', '+'], got [7, 43, 7, 13, 7]"
                ],
                "elapsed_time": 14.24372911453247
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.060389518737793
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.9256105422973633
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.255368232727051
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.179935693740845
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.10043478012085
            }
        },
        "sieve": {
            "buggy": {
                "pass_rate": 0.16666666666666666,
                "passed": 1,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [2], got []",
                    "Test 3: Expected [2, 3], got []",
                    "Test 4: Expected [2, 3, 5, 7], got []",
                    "Test 5: Expected [2, 3, 5, 7, 11, 13, 17, 19], got []",
                    "Test 6: Expected [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47], got []"
                ],
                "elapsed_time": 0.674055814743042
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.600481271743774
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.794632911682129
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 27.975050687789917
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 13.318517923355103
            },
            "O4-Mini": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "Test 1: Exception - 'list' object has no attribute 'merge_two_sorted_lists'",
                    "Test 2: Exception - 'list' object has no attribute 'merge_two_sorted_lists'",
                    "Test 3: Exception - 'list' object has no attribute 'merge_two_sorted_lists'",
                    "Test 4: Exception - 'list' object has no attribute 'merge_two_sorted_lists'",
                    "Test 5: Exception - 'list' object has no attribute 'merge_two_sorted_lists'",
                    "Test 6: Exception - 'list' object has no attribute 'merge_two_sorted_lists'"
                ],
                "elapsed_time": 18.249276399612427
            }
        },
        "sqrt": {
            "buggy": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 31.320385694503784,
                "error": "Timeout after 30 seconds"
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.319978952407837
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.23639988899231
            },
            "Deepseek": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 41.725913763046265,
                "error": "Timeout after 30 seconds"
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.580106496810913
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.2492239475250244
            }
        },
        "subsequences": {
            "buggy": {
                "pass_rate": 0.16666666666666666,
                "passed": 2,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]], got []",
                    "Test 4: Expected [[4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 5: Expected [[4, 5, 6, 7, 8, 9]], got []",
                    "Test 6: Expected [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [3, 9], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [5, 6], [5, 7], [5, 8], [5, 9], [6, 7], [6, 8], [6, 9], [7, 8], [7, 9], [8, 9]], got []",
                    "Test 7: Expected [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 7], [1, 2, 3, 4, 5, 8], [1, 2, 3, 4, 5, 9], [1, 2, 3, 4, 6, 7], [1, 2, 3, 4, 6, 8], [1, 2, 3, 4, 6, 9], [1, 2, 3, 4, 7, 8], [1, 2, 3, 4, 7, 9], [1, 2, 3, 4, 8, 9], [1, 2, 3, 5, 6, 7], [1, 2, 3, 5, 6, 8], [1, 2, 3, 5, 6, 9], [1, 2, 3, 5, 7, 8], [1, 2, 3, 5, 7, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 7, 8], [1, 2, 3, 6, 7, 9], [1, 2, 3, 6, 8, 9], [1, 2, 3, 7, 8, 9], [1, 2, 4, 5, 6, 7], [1, 2, 4, 5, 6, 8], [1, 2, 4, 5, 6, 9], [1, 2, 4, 5, 7, 8], [1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 8, 9], [1, 2, 4, 6, 7, 8], [1, 2, 4, 6, 7, 9], [1, 2, 4, 6, 8, 9], [1, 2, 4, 7, 8, 9], [1, 2, 5, 6, 7, 8], [1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 8, 9], [1, 2, 5, 7, 8, 9], [1, 2, 6, 7, 8, 9], [1, 3, 4, 5, 6, 7], [1, 3, 4, 5, 6, 8], [1, 3, 4, 5, 6, 9], [1, 3, 4, 5, 7, 8], [1, 3, 4, 5, 7, 9], [1, 3, 4, 5, 8, 9], [1, 3, 4, 6, 7, 8], [1, 3, 4, 6, 7, 9], [1, 3, 4, 6, 8, 9], [1, 3, 4, 7, 8, 9], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 7, 9], [1, 3, 5, 6, 8, 9], [1, 3, 5, 7, 8, 9], [1, 3, 6, 7, 8, 9], [1, 4, 5, 6, 7, 8], [1, 4, 5, 6, 7, 9], [1, 4, 5, 6, 8, 9], [1, 4, 5, 7, 8, 9], [1, 4, 6, 7, 8, 9], [1, 5, 6, 7, 8, 9], [2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 8], [2, 3, 4, 5, 6, 9], [2, 3, 4, 5, 7, 8], [2, 3, 4, 5, 7, 9], [2, 3, 4, 5, 8, 9], [2, 3, 4, 6, 7, 8], [2, 3, 4, 6, 7, 9], [2, 3, 4, 6, 8, 9], [2, 3, 4, 7, 8, 9], [2, 3, 5, 6, 7, 8], [2, 3, 5, 6, 7, 9], [2, 3, 5, 6, 8, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 7, 8, 9], [2, 4, 5, 6, 7, 8], [2, 4, 5, 6, 7, 9], [2, 4, 5, 6, 8, 9], [2, 4, 5, 7, 8, 9], [2, 4, 6, 7, 8, 9], [2, 5, 6, 7, 8, 9], [3, 4, 5, 6, 7, 8], [3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 8, 9], [3, 4, 5, 7, 8, 9], [3, 4, 6, 7, 8, 9], [3, 5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9]], got []",
                    "Test 8: Expected [[1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 3, 6], [1, 2, 3, 7], [1, 2, 3, 8], [1, 2, 3, 9], [1, 2, 4, 5], [1, 2, 4, 6], [1, 2, 4, 7], [1, 2, 4, 8], [1, 2, 4, 9], [1, 2, 5, 6], [1, 2, 5, 7], [1, 2, 5, 8], [1, 2, 5, 9], [1, 2, 6, 7], [1, 2, 6, 8], [1, 2, 6, 9], [1, 2, 7, 8], [1, 2, 7, 9], [1, 2, 8, 9], [1, 3, 4, 5], [1, 3, 4, 6], [1, 3, 4, 7], [1, 3, 4, 8], [1, 3, 4, 9], [1, 3, 5, 6], [1, 3, 5, 7], [1, 3, 5, 8], [1, 3, 5, 9], [1, 3, 6, 7], [1, 3, 6, 8], [1, 3, 6, 9], [1, 3, 7, 8], [1, 3, 7, 9], [1, 3, 8, 9], [1, 4, 5, 6], [1, 4, 5, 7], [1, 4, 5, 8], [1, 4, 5, 9], [1, 4, 6, 7], [1, 4, 6, 8], [1, 4, 6, 9], [1, 4, 7, 8], [1, 4, 7, 9], [1, 4, 8, 9], [1, 5, 6, 7], [1, 5, 6, 8], [1, 5, 6, 9], [1, 5, 7, 8], [1, 5, 7, 9], [1, 5, 8, 9], [1, 6, 7, 8], [1, 6, 7, 9], [1, 6, 8, 9], [1, 7, 8, 9], [2, 3, 4, 5], [2, 3, 4, 6], [2, 3, 4, 7], [2, 3, 4, 8], [2, 3, 4, 9], [2, 3, 5, 6], [2, 3, 5, 7], [2, 3, 5, 8], [2, 3, 5, 9], [2, 3, 6, 7], [2, 3, 6, 8], [2, 3, 6, 9], [2, 3, 7, 8], [2, 3, 7, 9], [2, 3, 8, 9], [2, 4, 5, 6], [2, 4, 5, 7], [2, 4, 5, 8], [2, 4, 5, 9], [2, 4, 6, 7], [2, 4, 6, 8], [2, 4, 6, 9], [2, 4, 7, 8], [2, 4, 7, 9], [2, 4, 8, 9], [2, 5, 6, 7], [2, 5, 6, 8], [2, 5, 6, 9], [2, 5, 7, 8], [2, 5, 7, 9], [2, 5, 8, 9], [2, 6, 7, 8], [2, 6, 7, 9], [2, 6, 8, 9], [2, 7, 8, 9], [3, 4, 5, 6], [3, 4, 5, 7], [3, 4, 5, 8], [3, 4, 5, 9], [3, 4, 6, 7], [3, 4, 6, 8], [3, 4, 6, 9], [3, 4, 7, 8], [3, 4, 7, 9], [3, 4, 8, 9], [3, 5, 6, 7], [3, 5, 6, 8], [3, 5, 6, 9], [3, 5, 7, 8], [3, 5, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8], [3, 6, 7, 9], [3, 6, 8, 9], [3, 7, 8, 9], [4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 9: Expected [[1], [2], [3], [4], [5], [6], [7], [8], [9]], got []",
                    "Test 10: Expected [[5, 6, 7, 8, 9, 10, 11], [5, 6, 7, 8, 9, 10, 12], [5, 6, 7, 8, 9, 11, 12], [5, 6, 7, 8, 10, 11, 12], [5, 6, 7, 9, 10, 11, 12], [5, 6, 8, 9, 10, 11, 12], [5, 7, 8, 9, 10, 11, 12], [6, 7, 8, 9, 10, 11, 12]], got []",
                    "Test 11: Expected [[]], got []",
                    "Test 12: Expected [[]], got []"
                ],
                "elapsed_time": 1.3074727058410645
            },
            "Claude 3.5": {
                "pass_rate": 0.16666666666666666,
                "passed": 2,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]], got []",
                    "Test 4: Expected [[4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 5: Expected [[4, 5, 6, 7, 8, 9]], got []",
                    "Test 6: Expected [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [3, 9], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [5, 6], [5, 7], [5, 8], [5, 9], [6, 7], [6, 8], [6, 9], [7, 8], [7, 9], [8, 9]], got []",
                    "Test 7: Expected [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 7], [1, 2, 3, 4, 5, 8], [1, 2, 3, 4, 5, 9], [1, 2, 3, 4, 6, 7], [1, 2, 3, 4, 6, 8], [1, 2, 3, 4, 6, 9], [1, 2, 3, 4, 7, 8], [1, 2, 3, 4, 7, 9], [1, 2, 3, 4, 8, 9], [1, 2, 3, 5, 6, 7], [1, 2, 3, 5, 6, 8], [1, 2, 3, 5, 6, 9], [1, 2, 3, 5, 7, 8], [1, 2, 3, 5, 7, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 7, 8], [1, 2, 3, 6, 7, 9], [1, 2, 3, 6, 8, 9], [1, 2, 3, 7, 8, 9], [1, 2, 4, 5, 6, 7], [1, 2, 4, 5, 6, 8], [1, 2, 4, 5, 6, 9], [1, 2, 4, 5, 7, 8], [1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 8, 9], [1, 2, 4, 6, 7, 8], [1, 2, 4, 6, 7, 9], [1, 2, 4, 6, 8, 9], [1, 2, 4, 7, 8, 9], [1, 2, 5, 6, 7, 8], [1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 8, 9], [1, 2, 5, 7, 8, 9], [1, 2, 6, 7, 8, 9], [1, 3, 4, 5, 6, 7], [1, 3, 4, 5, 6, 8], [1, 3, 4, 5, 6, 9], [1, 3, 4, 5, 7, 8], [1, 3, 4, 5, 7, 9], [1, 3, 4, 5, 8, 9], [1, 3, 4, 6, 7, 8], [1, 3, 4, 6, 7, 9], [1, 3, 4, 6, 8, 9], [1, 3, 4, 7, 8, 9], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 7, 9], [1, 3, 5, 6, 8, 9], [1, 3, 5, 7, 8, 9], [1, 3, 6, 7, 8, 9], [1, 4, 5, 6, 7, 8], [1, 4, 5, 6, 7, 9], [1, 4, 5, 6, 8, 9], [1, 4, 5, 7, 8, 9], [1, 4, 6, 7, 8, 9], [1, 5, 6, 7, 8, 9], [2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 8], [2, 3, 4, 5, 6, 9], [2, 3, 4, 5, 7, 8], [2, 3, 4, 5, 7, 9], [2, 3, 4, 5, 8, 9], [2, 3, 4, 6, 7, 8], [2, 3, 4, 6, 7, 9], [2, 3, 4, 6, 8, 9], [2, 3, 4, 7, 8, 9], [2, 3, 5, 6, 7, 8], [2, 3, 5, 6, 7, 9], [2, 3, 5, 6, 8, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 7, 8, 9], [2, 4, 5, 6, 7, 8], [2, 4, 5, 6, 7, 9], [2, 4, 5, 6, 8, 9], [2, 4, 5, 7, 8, 9], [2, 4, 6, 7, 8, 9], [2, 5, 6, 7, 8, 9], [3, 4, 5, 6, 7, 8], [3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 8, 9], [3, 4, 5, 7, 8, 9], [3, 4, 6, 7, 8, 9], [3, 5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9]], got []",
                    "Test 8: Expected [[1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 3, 6], [1, 2, 3, 7], [1, 2, 3, 8], [1, 2, 3, 9], [1, 2, 4, 5], [1, 2, 4, 6], [1, 2, 4, 7], [1, 2, 4, 8], [1, 2, 4, 9], [1, 2, 5, 6], [1, 2, 5, 7], [1, 2, 5, 8], [1, 2, 5, 9], [1, 2, 6, 7], [1, 2, 6, 8], [1, 2, 6, 9], [1, 2, 7, 8], [1, 2, 7, 9], [1, 2, 8, 9], [1, 3, 4, 5], [1, 3, 4, 6], [1, 3, 4, 7], [1, 3, 4, 8], [1, 3, 4, 9], [1, 3, 5, 6], [1, 3, 5, 7], [1, 3, 5, 8], [1, 3, 5, 9], [1, 3, 6, 7], [1, 3, 6, 8], [1, 3, 6, 9], [1, 3, 7, 8], [1, 3, 7, 9], [1, 3, 8, 9], [1, 4, 5, 6], [1, 4, 5, 7], [1, 4, 5, 8], [1, 4, 5, 9], [1, 4, 6, 7], [1, 4, 6, 8], [1, 4, 6, 9], [1, 4, 7, 8], [1, 4, 7, 9], [1, 4, 8, 9], [1, 5, 6, 7], [1, 5, 6, 8], [1, 5, 6, 9], [1, 5, 7, 8], [1, 5, 7, 9], [1, 5, 8, 9], [1, 6, 7, 8], [1, 6, 7, 9], [1, 6, 8, 9], [1, 7, 8, 9], [2, 3, 4, 5], [2, 3, 4, 6], [2, 3, 4, 7], [2, 3, 4, 8], [2, 3, 4, 9], [2, 3, 5, 6], [2, 3, 5, 7], [2, 3, 5, 8], [2, 3, 5, 9], [2, 3, 6, 7], [2, 3, 6, 8], [2, 3, 6, 9], [2, 3, 7, 8], [2, 3, 7, 9], [2, 3, 8, 9], [2, 4, 5, 6], [2, 4, 5, 7], [2, 4, 5, 8], [2, 4, 5, 9], [2, 4, 6, 7], [2, 4, 6, 8], [2, 4, 6, 9], [2, 4, 7, 8], [2, 4, 7, 9], [2, 4, 8, 9], [2, 5, 6, 7], [2, 5, 6, 8], [2, 5, 6, 9], [2, 5, 7, 8], [2, 5, 7, 9], [2, 5, 8, 9], [2, 6, 7, 8], [2, 6, 7, 9], [2, 6, 8, 9], [2, 7, 8, 9], [3, 4, 5, 6], [3, 4, 5, 7], [3, 4, 5, 8], [3, 4, 5, 9], [3, 4, 6, 7], [3, 4, 6, 8], [3, 4, 6, 9], [3, 4, 7, 8], [3, 4, 7, 9], [3, 4, 8, 9], [3, 5, 6, 7], [3, 5, 6, 8], [3, 5, 6, 9], [3, 5, 7, 8], [3, 5, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8], [3, 6, 7, 9], [3, 6, 8, 9], [3, 7, 8, 9], [4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 9: Expected [[1], [2], [3], [4], [5], [6], [7], [8], [9]], got []",
                    "Test 10: Expected [[5, 6, 7, 8, 9, 10, 11], [5, 6, 7, 8, 9, 10, 12], [5, 6, 7, 8, 9, 11, 12], [5, 6, 7, 8, 10, 11, 12], [5, 6, 7, 9, 10, 11, 12], [5, 6, 8, 9, 10, 11, 12], [5, 7, 8, 9, 10, 11, 12], [6, 7, 8, 9, 10, 11, 12]], got []",
                    "Test 11: Expected [[]], got []",
                    "Test 12: Expected [[]], got []"
                ],
                "elapsed_time": 11.040720701217651
            },
            "Claude 3.7": {
                "pass_rate": 0.16666666666666666,
                "passed": 2,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]], got []",
                    "Test 4: Expected [[4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 5: Expected [[4, 5, 6, 7, 8, 9]], got []",
                    "Test 6: Expected [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [3, 9], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [5, 6], [5, 7], [5, 8], [5, 9], [6, 7], [6, 8], [6, 9], [7, 8], [7, 9], [8, 9]], got []",
                    "Test 7: Expected [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 7], [1, 2, 3, 4, 5, 8], [1, 2, 3, 4, 5, 9], [1, 2, 3, 4, 6, 7], [1, 2, 3, 4, 6, 8], [1, 2, 3, 4, 6, 9], [1, 2, 3, 4, 7, 8], [1, 2, 3, 4, 7, 9], [1, 2, 3, 4, 8, 9], [1, 2, 3, 5, 6, 7], [1, 2, 3, 5, 6, 8], [1, 2, 3, 5, 6, 9], [1, 2, 3, 5, 7, 8], [1, 2, 3, 5, 7, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 7, 8], [1, 2, 3, 6, 7, 9], [1, 2, 3, 6, 8, 9], [1, 2, 3, 7, 8, 9], [1, 2, 4, 5, 6, 7], [1, 2, 4, 5, 6, 8], [1, 2, 4, 5, 6, 9], [1, 2, 4, 5, 7, 8], [1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 8, 9], [1, 2, 4, 6, 7, 8], [1, 2, 4, 6, 7, 9], [1, 2, 4, 6, 8, 9], [1, 2, 4, 7, 8, 9], [1, 2, 5, 6, 7, 8], [1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 8, 9], [1, 2, 5, 7, 8, 9], [1, 2, 6, 7, 8, 9], [1, 3, 4, 5, 6, 7], [1, 3, 4, 5, 6, 8], [1, 3, 4, 5, 6, 9], [1, 3, 4, 5, 7, 8], [1, 3, 4, 5, 7, 9], [1, 3, 4, 5, 8, 9], [1, 3, 4, 6, 7, 8], [1, 3, 4, 6, 7, 9], [1, 3, 4, 6, 8, 9], [1, 3, 4, 7, 8, 9], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 7, 9], [1, 3, 5, 6, 8, 9], [1, 3, 5, 7, 8, 9], [1, 3, 6, 7, 8, 9], [1, 4, 5, 6, 7, 8], [1, 4, 5, 6, 7, 9], [1, 4, 5, 6, 8, 9], [1, 4, 5, 7, 8, 9], [1, 4, 6, 7, 8, 9], [1, 5, 6, 7, 8, 9], [2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 8], [2, 3, 4, 5, 6, 9], [2, 3, 4, 5, 7, 8], [2, 3, 4, 5, 7, 9], [2, 3, 4, 5, 8, 9], [2, 3, 4, 6, 7, 8], [2, 3, 4, 6, 7, 9], [2, 3, 4, 6, 8, 9], [2, 3, 4, 7, 8, 9], [2, 3, 5, 6, 7, 8], [2, 3, 5, 6, 7, 9], [2, 3, 5, 6, 8, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 7, 8, 9], [2, 4, 5, 6, 7, 8], [2, 4, 5, 6, 7, 9], [2, 4, 5, 6, 8, 9], [2, 4, 5, 7, 8, 9], [2, 4, 6, 7, 8, 9], [2, 5, 6, 7, 8, 9], [3, 4, 5, 6, 7, 8], [3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 8, 9], [3, 4, 5, 7, 8, 9], [3, 4, 6, 7, 8, 9], [3, 5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9]], got []",
                    "Test 8: Expected [[1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 3, 6], [1, 2, 3, 7], [1, 2, 3, 8], [1, 2, 3, 9], [1, 2, 4, 5], [1, 2, 4, 6], [1, 2, 4, 7], [1, 2, 4, 8], [1, 2, 4, 9], [1, 2, 5, 6], [1, 2, 5, 7], [1, 2, 5, 8], [1, 2, 5, 9], [1, 2, 6, 7], [1, 2, 6, 8], [1, 2, 6, 9], [1, 2, 7, 8], [1, 2, 7, 9], [1, 2, 8, 9], [1, 3, 4, 5], [1, 3, 4, 6], [1, 3, 4, 7], [1, 3, 4, 8], [1, 3, 4, 9], [1, 3, 5, 6], [1, 3, 5, 7], [1, 3, 5, 8], [1, 3, 5, 9], [1, 3, 6, 7], [1, 3, 6, 8], [1, 3, 6, 9], [1, 3, 7, 8], [1, 3, 7, 9], [1, 3, 8, 9], [1, 4, 5, 6], [1, 4, 5, 7], [1, 4, 5, 8], [1, 4, 5, 9], [1, 4, 6, 7], [1, 4, 6, 8], [1, 4, 6, 9], [1, 4, 7, 8], [1, 4, 7, 9], [1, 4, 8, 9], [1, 5, 6, 7], [1, 5, 6, 8], [1, 5, 6, 9], [1, 5, 7, 8], [1, 5, 7, 9], [1, 5, 8, 9], [1, 6, 7, 8], [1, 6, 7, 9], [1, 6, 8, 9], [1, 7, 8, 9], [2, 3, 4, 5], [2, 3, 4, 6], [2, 3, 4, 7], [2, 3, 4, 8], [2, 3, 4, 9], [2, 3, 5, 6], [2, 3, 5, 7], [2, 3, 5, 8], [2, 3, 5, 9], [2, 3, 6, 7], [2, 3, 6, 8], [2, 3, 6, 9], [2, 3, 7, 8], [2, 3, 7, 9], [2, 3, 8, 9], [2, 4, 5, 6], [2, 4, 5, 7], [2, 4, 5, 8], [2, 4, 5, 9], [2, 4, 6, 7], [2, 4, 6, 8], [2, 4, 6, 9], [2, 4, 7, 8], [2, 4, 7, 9], [2, 4, 8, 9], [2, 5, 6, 7], [2, 5, 6, 8], [2, 5, 6, 9], [2, 5, 7, 8], [2, 5, 7, 9], [2, 5, 8, 9], [2, 6, 7, 8], [2, 6, 7, 9], [2, 6, 8, 9], [2, 7, 8, 9], [3, 4, 5, 6], [3, 4, 5, 7], [3, 4, 5, 8], [3, 4, 5, 9], [3, 4, 6, 7], [3, 4, 6, 8], [3, 4, 6, 9], [3, 4, 7, 8], [3, 4, 7, 9], [3, 4, 8, 9], [3, 5, 6, 7], [3, 5, 6, 8], [3, 5, 6, 9], [3, 5, 7, 8], [3, 5, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8], [3, 6, 7, 9], [3, 6, 8, 9], [3, 7, 8, 9], [4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 9: Expected [[1], [2], [3], [4], [5], [6], [7], [8], [9]], got []",
                    "Test 10: Expected [[5, 6, 7, 8, 9, 10, 11], [5, 6, 7, 8, 9, 10, 12], [5, 6, 7, 8, 9, 11, 12], [5, 6, 7, 8, 10, 11, 12], [5, 6, 7, 9, 10, 11, 12], [5, 6, 8, 9, 10, 11, 12], [5, 7, 8, 9, 10, 11, 12], [6, 7, 8, 9, 10, 11, 12]], got []",
                    "Test 11: Expected [[]], got []",
                    "Test 12: Expected [[]], got []"
                ],
                "elapsed_time": 17.17738103866577
            },
            "Deepseek": {
                "pass_rate": 0.16666666666666666,
                "passed": 2,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]], got []",
                    "Test 4: Expected [[4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 5: Expected [[4, 5, 6, 7, 8, 9]], got []",
                    "Test 6: Expected [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [3, 9], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [5, 6], [5, 7], [5, 8], [5, 9], [6, 7], [6, 8], [6, 9], [7, 8], [7, 9], [8, 9]], got []",
                    "Test 7: Expected [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 7], [1, 2, 3, 4, 5, 8], [1, 2, 3, 4, 5, 9], [1, 2, 3, 4, 6, 7], [1, 2, 3, 4, 6, 8], [1, 2, 3, 4, 6, 9], [1, 2, 3, 4, 7, 8], [1, 2, 3, 4, 7, 9], [1, 2, 3, 4, 8, 9], [1, 2, 3, 5, 6, 7], [1, 2, 3, 5, 6, 8], [1, 2, 3, 5, 6, 9], [1, 2, 3, 5, 7, 8], [1, 2, 3, 5, 7, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 7, 8], [1, 2, 3, 6, 7, 9], [1, 2, 3, 6, 8, 9], [1, 2, 3, 7, 8, 9], [1, 2, 4, 5, 6, 7], [1, 2, 4, 5, 6, 8], [1, 2, 4, 5, 6, 9], [1, 2, 4, 5, 7, 8], [1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 8, 9], [1, 2, 4, 6, 7, 8], [1, 2, 4, 6, 7, 9], [1, 2, 4, 6, 8, 9], [1, 2, 4, 7, 8, 9], [1, 2, 5, 6, 7, 8], [1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 8, 9], [1, 2, 5, 7, 8, 9], [1, 2, 6, 7, 8, 9], [1, 3, 4, 5, 6, 7], [1, 3, 4, 5, 6, 8], [1, 3, 4, 5, 6, 9], [1, 3, 4, 5, 7, 8], [1, 3, 4, 5, 7, 9], [1, 3, 4, 5, 8, 9], [1, 3, 4, 6, 7, 8], [1, 3, 4, 6, 7, 9], [1, 3, 4, 6, 8, 9], [1, 3, 4, 7, 8, 9], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 7, 9], [1, 3, 5, 6, 8, 9], [1, 3, 5, 7, 8, 9], [1, 3, 6, 7, 8, 9], [1, 4, 5, 6, 7, 8], [1, 4, 5, 6, 7, 9], [1, 4, 5, 6, 8, 9], [1, 4, 5, 7, 8, 9], [1, 4, 6, 7, 8, 9], [1, 5, 6, 7, 8, 9], [2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 8], [2, 3, 4, 5, 6, 9], [2, 3, 4, 5, 7, 8], [2, 3, 4, 5, 7, 9], [2, 3, 4, 5, 8, 9], [2, 3, 4, 6, 7, 8], [2, 3, 4, 6, 7, 9], [2, 3, 4, 6, 8, 9], [2, 3, 4, 7, 8, 9], [2, 3, 5, 6, 7, 8], [2, 3, 5, 6, 7, 9], [2, 3, 5, 6, 8, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 7, 8, 9], [2, 4, 5, 6, 7, 8], [2, 4, 5, 6, 7, 9], [2, 4, 5, 6, 8, 9], [2, 4, 5, 7, 8, 9], [2, 4, 6, 7, 8, 9], [2, 5, 6, 7, 8, 9], [3, 4, 5, 6, 7, 8], [3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 8, 9], [3, 4, 5, 7, 8, 9], [3, 4, 6, 7, 8, 9], [3, 5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9]], got []",
                    "Test 8: Expected [[1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 3, 6], [1, 2, 3, 7], [1, 2, 3, 8], [1, 2, 3, 9], [1, 2, 4, 5], [1, 2, 4, 6], [1, 2, 4, 7], [1, 2, 4, 8], [1, 2, 4, 9], [1, 2, 5, 6], [1, 2, 5, 7], [1, 2, 5, 8], [1, 2, 5, 9], [1, 2, 6, 7], [1, 2, 6, 8], [1, 2, 6, 9], [1, 2, 7, 8], [1, 2, 7, 9], [1, 2, 8, 9], [1, 3, 4, 5], [1, 3, 4, 6], [1, 3, 4, 7], [1, 3, 4, 8], [1, 3, 4, 9], [1, 3, 5, 6], [1, 3, 5, 7], [1, 3, 5, 8], [1, 3, 5, 9], [1, 3, 6, 7], [1, 3, 6, 8], [1, 3, 6, 9], [1, 3, 7, 8], [1, 3, 7, 9], [1, 3, 8, 9], [1, 4, 5, 6], [1, 4, 5, 7], [1, 4, 5, 8], [1, 4, 5, 9], [1, 4, 6, 7], [1, 4, 6, 8], [1, 4, 6, 9], [1, 4, 7, 8], [1, 4, 7, 9], [1, 4, 8, 9], [1, 5, 6, 7], [1, 5, 6, 8], [1, 5, 6, 9], [1, 5, 7, 8], [1, 5, 7, 9], [1, 5, 8, 9], [1, 6, 7, 8], [1, 6, 7, 9], [1, 6, 8, 9], [1, 7, 8, 9], [2, 3, 4, 5], [2, 3, 4, 6], [2, 3, 4, 7], [2, 3, 4, 8], [2, 3, 4, 9], [2, 3, 5, 6], [2, 3, 5, 7], [2, 3, 5, 8], [2, 3, 5, 9], [2, 3, 6, 7], [2, 3, 6, 8], [2, 3, 6, 9], [2, 3, 7, 8], [2, 3, 7, 9], [2, 3, 8, 9], [2, 4, 5, 6], [2, 4, 5, 7], [2, 4, 5, 8], [2, 4, 5, 9], [2, 4, 6, 7], [2, 4, 6, 8], [2, 4, 6, 9], [2, 4, 7, 8], [2, 4, 7, 9], [2, 4, 8, 9], [2, 5, 6, 7], [2, 5, 6, 8], [2, 5, 6, 9], [2, 5, 7, 8], [2, 5, 7, 9], [2, 5, 8, 9], [2, 6, 7, 8], [2, 6, 7, 9], [2, 6, 8, 9], [2, 7, 8, 9], [3, 4, 5, 6], [3, 4, 5, 7], [3, 4, 5, 8], [3, 4, 5, 9], [3, 4, 6, 7], [3, 4, 6, 8], [3, 4, 6, 9], [3, 4, 7, 8], [3, 4, 7, 9], [3, 4, 8, 9], [3, 5, 6, 7], [3, 5, 6, 8], [3, 5, 6, 9], [3, 5, 7, 8], [3, 5, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8], [3, 6, 7, 9], [3, 6, 8, 9], [3, 7, 8, 9], [4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 9: Expected [[1], [2], [3], [4], [5], [6], [7], [8], [9]], got []",
                    "Test 10: Expected [[5, 6, 7, 8, 9, 10, 11], [5, 6, 7, 8, 9, 10, 12], [5, 6, 7, 8, 9, 11, 12], [5, 6, 7, 8, 10, 11, 12], [5, 6, 7, 9, 10, 11, 12], [5, 6, 8, 9, 10, 11, 12], [5, 7, 8, 9, 10, 11, 12], [6, 7, 8, 9, 10, 11, 12]], got []",
                    "Test 11: Expected [[]], got []",
                    "Test 12: Expected [[]], got []"
                ],
                "elapsed_time": 15.479794025421143
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 12,
                "total": 12,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.9325990676879883
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 12,
                "total": 12,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.886828899383545
            }
        },
        "to_base": {
            "buggy": {
                "pass_rate": 0.3,
                "passed": 3,
                "total": 10,
                "success": false,
                "failed_tests": [
                    "Test 4: Expected 1F, got F1",
                    "Test 5: Expected 101001, got 100101",
                    "Test 6: Expected 134, got 431",
                    "Test 7: Expected 14, got 41",
                    "Test 8: Expected 2A, got A2",
                    "Test 9: Expected E75, got 57E",
                    "Test 10: Expected 749, got 947"
                ],
                "elapsed_time": 1.3778109550476074
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 12.45517086982727
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.24556469917297363
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 3.7303218841552734
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.88571310043335
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 18.93295931816101
            }
        },
        "topological_ordering": {
            "buggy": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "test1: AssertionError - ",
                    "test2: AssertionError - ",
                    "test3: AssertionError - "
                ],
                "elapsed_time": 4.66362452507019
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.061263084411621
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.860295057296753
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.4129087924957275
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.921659469604492
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 19.486507415771484
            }
        },
        "wrap": {
            "buggy": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected ['The leaves did not stir on the trees, grasshoppers', ' chirruped, and the monotonous hollow sound of the', ' sea rising up from below, spoke of the peace, of', ' the eternal sleep awaiting us. So it must have', ' sounded when there was no Yalta, no Oreanda here;', ' so it sounds now, and it will sound as', ' indifferently and monotonously when we are all no', ' more. And in this constancy, in this complete', ' indifference to the life and death of each of us,', ' there lies hid, perhaps, a pledge of our eternal', ' salvation, of the unceasing movement of life upon', ' earth, of unceasing progress towards perfection.', ' Sitting beside a young woman who in the dawn', ' seemed so lovely, soothed and spellbound in these', ' magical surroundings - the sea, mountains,', ' clouds, the open sky - Gurov thought how in', ' reality everything is beautiful in this world', ' when one reflects: everything except what we', ' think or do ourselves when we forget our human', ' dignity and the higher aims of our existence.'], got ['The leaves did not stir on the trees, grasshoppers', ' chirruped, and the monotonous hollow sound of the', ' sea rising up from below, spoke of the peace, of', ' the eternal sleep awaiting us. So it must have', ' sounded when there was no Yalta, no Oreanda here;', ' so it sounds now, and it will sound as', ' indifferently and monotonously when we are all no', ' more. And in this constancy, in this complete', ' indifference to the life and death of each of us,', ' there lies hid, perhaps, a pledge of our eternal', ' salvation, of the unceasing movement of life upon', ' earth, of unceasing progress towards perfection.', ' Sitting beside a young woman who in the dawn', ' seemed so lovely, soothed and spellbound in these', ' magical surroundings - the sea, mountains,', ' clouds, the open sky - Gurov thought how in', ' reality everything is beautiful in this world', ' when one reflects: everything except what we', ' think or do ourselves when we forget our human']",
                    "Test 2: Expected ['The leaves did not', ' stir on the trees,', ' grasshoppers', ' chirruped, and the', ' monotonous hollow', ' sound of the sea', ' rising up from', ' below, spoke of the', ' peace, of the', ' eternal sleep', ' awaiting us. So it', ' must have sounded', ' when there was no', ' Yalta, no Oreanda', ' here; so it sounds', ' now, and it will', ' sound as', ' indifferently and', ' monotonously when', ' we are all no more.', ' And in this', ' constancy, in this', ' complete', ' indifference to the', ' life and death of', ' each of us, there', ' lies hid, perhaps,', ' a pledge of our', ' eternal salvation,', ' of the unceasing', ' movement of life', ' upon earth, of', ' unceasing progress', ' towards perfection.', ' Sitting beside a', ' young woman who in', ' the dawn seemed so', ' lovely, soothed and', ' spellbound in these', ' magical', ' surroundings - the', ' sea, mountains,', ' clouds, the open', ' sky - Gurov thought', ' how in reality', ' everything is', ' beautiful in this', ' world when one', ' reflects:', ' everything except', ' what we think or do', ' ourselves when we', ' forget our human', ' dignity and the', ' higher aims of our', ' existence.'], got ['The leaves did not', ' stir on the trees,', ' grasshoppers', ' chirruped, and the', ' monotonous hollow', ' sound of the sea', ' rising up from', ' below, spoke of the', ' peace, of the', ' eternal sleep', ' awaiting us. So it', ' must have sounded', ' when there was no', ' Yalta, no Oreanda', ' here; so it sounds', ' now, and it will', ' sound as', ' indifferently and', ' monotonously when', ' we are all no more.', ' And in this', ' constancy, in this', ' complete', ' indifference to the', ' life and death of', ' each of us, there', ' lies hid, perhaps,', ' a pledge of our', ' eternal salvation,', ' of the unceasing', ' movement of life', ' upon earth, of', ' unceasing progress', ' towards perfection.', ' Sitting beside a', ' young woman who in', ' the dawn seemed so', ' lovely, soothed and', ' spellbound in these', ' magical', ' surroundings - the', ' sea, mountains,', ' clouds, the open', ' sky - Gurov thought', ' how in reality', ' everything is', ' beautiful in this', ' world when one', ' reflects:', ' everything except', ' what we think or do', ' ourselves when we', ' forget our human', ' dignity and the', ' higher aims of our']",
                    "Test 3: Expected ['The leaves did not stir on the trees, grasshoppers chirruped, and the monotonous', ' hollow sound of the sea rising up from below, spoke of the peace, of the', ' eternal sleep awaiting us. So it must have sounded when there was no Yalta, no', ' Oreanda here; so it sounds now, and it will sound as indifferently and', ' monotonously when we are all no more. And in this constancy, in this complete', ' indifference to the life and death of each of us, there lies hid, perhaps, a', ' pledge of our eternal salvation, of the unceasing movement of life upon earth,', ' of unceasing progress towards perfection. Sitting beside a young woman who in', ' the dawn seemed so lovely, soothed and spellbound in these magical surroundings', ' - the sea, mountains, clouds, the open sky - Gurov thought how in reality', ' everything is beautiful in this world when one reflects: everything except what', ' we think or do ourselves when we forget our human dignity and the higher aims', ' of our existence.'], got ['The leaves did not stir on the trees, grasshoppers chirruped, and the monotonous', ' hollow sound of the sea rising up from below, spoke of the peace, of the', ' eternal sleep awaiting us. So it must have sounded when there was no Yalta, no', ' Oreanda here; so it sounds now, and it will sound as indifferently and', ' monotonously when we are all no more. And in this constancy, in this complete', ' indifference to the life and death of each of us, there lies hid, perhaps, a', ' pledge of our eternal salvation, of the unceasing movement of life upon earth,', ' of unceasing progress towards perfection. Sitting beside a young woman who in', ' the dawn seemed so lovely, soothed and spellbound in these magical surroundings', ' - the sea, mountains, clouds, the open sky - Gurov thought how in reality', ' everything is beautiful in this world when one reflects: everything except what', ' we think or do ourselves when we forget our human dignity and the higher aims']",
                    "Test 4: Expected ['The leaves did not stir on the trees, grasshoppers chirruped, and the', ' monotonous hollow sound of the sea rising up from below, spoke of the peace,', ' of the eternal sleep awaiting us. So it must have sounded when there was no', ' Yalta, no Oreanda here; so it sounds now, and it will sound as indifferently', ' and monotonously when we are all no more. And in this constancy, in this', ' complete indifference to the life and death of each of us, there lies hid,', ' perhaps, a pledge of our eternal salvation, of the unceasing movement of', ' life upon earth, of unceasing progress towards perfection. Sitting beside a', ' young woman who in the dawn seemed so lovely, soothed and spellbound in', ' these magical surroundings - the sea, mountains, clouds, the open sky -', ' Gurov thought how in reality everything is beautiful in this world when one', ' reflects: everything except what we think or do ourselves when we forget our', ' human dignity and the higher aims of our existence.'], got ['The leaves did not stir on the trees, grasshoppers chirruped, and the', ' monotonous hollow sound of the sea rising up from below, spoke of the peace,', ' of the eternal sleep awaiting us. So it must have sounded when there was no', ' Yalta, no Oreanda here; so it sounds now, and it will sound as indifferently', ' and monotonously when we are all no more. And in this constancy, in this', ' complete indifference to the life and death of each of us, there lies hid,', ' perhaps, a pledge of our eternal salvation, of the unceasing movement of', ' life upon earth, of unceasing progress towards perfection. Sitting beside a', ' young woman who in the dawn seemed so lovely, soothed and spellbound in', ' these magical surroundings - the sea, mountains, clouds, the open sky -', ' Gurov thought how in reality everything is beautiful in this world when one', ' reflects: everything except what we think or do ourselves when we forget our']",
                    "Test 5: Expected ['The leaves did not stir on the trees, grasshoppers chirruped, and the monotonous hollow sound of the sea rising up from below, spoke of the', ' peace, of the eternal sleep awaiting us. So it must have sounded when there was no Yalta, no Oreanda here; so it sounds now, and it will', ' sound as indifferently and monotonously when we are all no more. And in this constancy, in this complete indifference to the life and death', ' of each of us, there lies hid, perhaps, a pledge of our eternal salvation, of the unceasing movement of life upon earth, of unceasing', ' progress towards perfection. Sitting beside a young woman who in the dawn seemed so lovely, soothed and spellbound in these magical', ' surroundings - the sea, mountains, clouds, the open sky - Gurov thought how in reality everything is beautiful in this world when one', ' reflects: everything except what we think or do ourselves when we forget our human dignity and the higher aims of our existence.'], got ['The leaves did not stir on the trees, grasshoppers chirruped, and the monotonous hollow sound of the sea rising up from below, spoke of the', ' peace, of the eternal sleep awaiting us. So it must have sounded when there was no Yalta, no Oreanda here; so it sounds now, and it will', ' sound as indifferently and monotonously when we are all no more. And in this constancy, in this complete indifference to the life and death', ' of each of us, there lies hid, perhaps, a pledge of our eternal salvation, of the unceasing movement of life upon earth, of unceasing', ' progress towards perfection. Sitting beside a young woman who in the dawn seemed so lovely, soothed and spellbound in these magical', ' surroundings - the sea, mountains, clouds, the open sky - Gurov thought how in reality everything is beautiful in this world when one']"
                ],
                "elapsed_time": 6.196271896362305
            },
            "Claude 3.5": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.748195886611938
            },
            "Claude 3.7": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 10.285897493362427
            },
            "Deepseek": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 11.60174822807312
            },
            "O3-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.365305185317993
            },
            "O4-Mini": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.685679912567139
            }
        }
    },
    "model_summary": {
        "Claude 3.5": {
            "total_programs": 41,
            "existing_programs": 41,
            "runnable_programs": 37,
            "implemented_count": 35,
            "successful_count": 30,
            "timeout_count": 3,
            "existing_rate": 1.0,
            "runnable_rate": 0.9024390243902439,
            "implementation_rate": 0.8536585365853658,
            "success_rate": 0.7317073170731707,
            "total_tests": 254,
            "passed_tests": 215,
            "overall_pass_rate": 0.8464566929133859,
            "avg_execution_time": 9.331898864110311
        },
        "Claude 3.7": {
            "total_programs": 41,
            "existing_programs": 41,
            "runnable_programs": 37,
            "implemented_count": 35,
            "successful_count": 30,
            "timeout_count": 3,
            "existing_rate": 1.0,
            "runnable_rate": 0.9024390243902439,
            "implementation_rate": 0.8536585365853658,
            "success_rate": 0.7317073170731707,
            "total_tests": 254,
            "passed_tests": 211,
            "overall_pass_rate": 0.8307086614173228,
            "avg_execution_time": 7.572057890892029
        },
        "Deepseek": {
            "total_programs": 41,
            "existing_programs": 41,
            "runnable_programs": 37,
            "implemented_count": 34,
            "successful_count": 24,
            "timeout_count": 3,
            "existing_rate": 1.0,
            "runnable_rate": 0.9024390243902439,
            "implementation_rate": 0.8292682926829268,
            "success_rate": 0.5853658536585366,
            "total_tests": 254,
            "passed_tests": 190,
            "overall_pass_rate": 0.7480314960629921,
            "avg_execution_time": 10.297206481297811
        },
        "O3-Mini": {
            "total_programs": 41,
            "existing_programs": 41,
            "runnable_programs": 38,
            "implemented_count": 36,
            "successful_count": 35,
            "timeout_count": 2,
            "existing_rate": 1.0,
            "runnable_rate": 0.926829268292683,
            "implementation_rate": 0.8780487804878049,
            "success_rate": 0.8536585365853658,
            "total_tests": 261,
            "passed_tests": 243,
            "overall_pass_rate": 0.9310344827586207,
            "avg_execution_time": 6.7109551429748535
        },
        "O4-Mini": {
            "total_programs": 41,
            "existing_programs": 41,
            "runnable_programs": 37,
            "implemented_count": 34,
            "successful_count": 31,
            "timeout_count": 3,
            "existing_rate": 1.0,
            "runnable_rate": 0.9024390243902439,
            "implementation_rate": 0.8292682926829268,
            "success_rate": 0.7560975609756098,
            "total_tests": 254,
            "passed_tests": 231,
            "overall_pass_rate": 0.9094488188976378,
            "avg_execution_time": 37.53114043512652
        }
    },
    "detailed_results": {
        "Claude 3.5": {
            "bitcount": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.4759633541107178
            },
            "breadth_first_search": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "test3: IndexError - pop from an empty deque"
                ],
                "elapsed_time": 0.6779561042785645
            },
            "bucketsort": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.5779561996459961
            },
            "depth_first_search": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.8769252300262451
            },
            "detect_cycle": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.6919491291046143
            },
            "find_first_in_sorted": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.43553590774536,
                "error": "Timeout after 30 seconds"
            },
            "find_in_sorted": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.466820240020752
            },
            "flatten": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 2: Expected [], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 3: Expected [1, 1], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 4: Expected [1, 2, 3, 4], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 5: Expected [1, 4, 6], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 6: Expected ['moe', 'curly', 'larry'], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 7: Expected ['a', 'b', 'c', 'd', 'e'], got <generator object flatten at 0x00000185110FA8F0>"
                ],
                "elapsed_time": 3.3787477016448975
            },
            "gcd": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.18969202041626
            },
            "get_factors": {
                "pass_rate": 1.0,
                "passed": 11,
                "total": 11,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.4681878089904785
            },
            "hanoi": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 3)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 3), (1, 2), (3, 2)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 2), (1, 1), (2, 1)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 2), (3, 1), (2, 1)]"
                ],
                "elapsed_time": 1.9789466857910156
            },
            "is_valid_parenthesization": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.163649559020996
            },
            "kheapsort": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FA9D0>"
                ],
                "elapsed_time": 2.2668254375457764
            },
            "knapsack": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.576412677764893,
                "error": "Timeout after 30 seconds"
            },
            "kth": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.438626527786255
            },
            "lcs_length": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 12.484743118286133
            },
            "levenshtein": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 31.648900270462036,
                "error": "Timeout after 30 seconds"
            },
            "lis": {
                "pass_rate": 0.3333333333333333,
                "passed": 4,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 3: Exception - 3",
                    "Test 5: Exception - 3",
                    "Test 7: Exception - 3",
                    "Test 8: Exception - 3",
                    "Test 9: Exception - 3",
                    "Test 10: Exception - 3",
                    "Test 11: Exception - 3",
                    "Test 12: Exception - 3"
                ],
                "elapsed_time": 7.002519845962524
            },
            "longest_common_subsequence": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 17.308419466018677
            },
            "max_sublist_sum": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 22.068963766098022
            },
            "mergesort": {
                "pass_rate": 1.0,
                "passed": 14,
                "total": 14,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.466949224472046
            },
            "minimum_spanning_tree": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 26.29118585586548
            },
            "next_palindrome": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.770956039428711
            },
            "next_permutation": {
                "pass_rate": 1.0,
                "passed": 8,
                "total": 8,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.900464534759521
            },
            "node": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 1.7930335998535156,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            },
            "pascal": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.441570043563843
            },
            "possible_change": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.552531003952026
            },
            "powerset": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.338780164718628
            },
            "quicksort": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.441301107406616
            },
            "reverse_linked_list": {
                "pass_rate": 0.3333333333333333,
                "passed": 1,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "test1: AttributeError - 'Node' object has no attribute 'next'",
                    "test2: AttributeError - 'Node' object has no attribute 'next'"
                ],
                "elapsed_time": 10.912369966506958
            },
            "rpn_eval": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 17.194079399108887
            },
            "shortest_path_length": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.116385459899902
            },
            "shortest_path_lengths": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 10.111351490020752
            },
            "shortest_paths": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.874035596847534
            },
            "shunting_yard": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.060389518737793
            },
            "sieve": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.600481271743774
            },
            "sqrt": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.319978952407837
            },
            "subsequences": {
                "pass_rate": 0.16666666666666666,
                "passed": 2,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]], got []",
                    "Test 4: Expected [[4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 5: Expected [[4, 5, 6, 7, 8, 9]], got []",
                    "Test 6: Expected [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [3, 9], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [5, 6], [5, 7], [5, 8], [5, 9], [6, 7], [6, 8], [6, 9], [7, 8], [7, 9], [8, 9]], got []",
                    "Test 7: Expected [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 7], [1, 2, 3, 4, 5, 8], [1, 2, 3, 4, 5, 9], [1, 2, 3, 4, 6, 7], [1, 2, 3, 4, 6, 8], [1, 2, 3, 4, 6, 9], [1, 2, 3, 4, 7, 8], [1, 2, 3, 4, 7, 9], [1, 2, 3, 4, 8, 9], [1, 2, 3, 5, 6, 7], [1, 2, 3, 5, 6, 8], [1, 2, 3, 5, 6, 9], [1, 2, 3, 5, 7, 8], [1, 2, 3, 5, 7, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 7, 8], [1, 2, 3, 6, 7, 9], [1, 2, 3, 6, 8, 9], [1, 2, 3, 7, 8, 9], [1, 2, 4, 5, 6, 7], [1, 2, 4, 5, 6, 8], [1, 2, 4, 5, 6, 9], [1, 2, 4, 5, 7, 8], [1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 8, 9], [1, 2, 4, 6, 7, 8], [1, 2, 4, 6, 7, 9], [1, 2, 4, 6, 8, 9], [1, 2, 4, 7, 8, 9], [1, 2, 5, 6, 7, 8], [1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 8, 9], [1, 2, 5, 7, 8, 9], [1, 2, 6, 7, 8, 9], [1, 3, 4, 5, 6, 7], [1, 3, 4, 5, 6, 8], [1, 3, 4, 5, 6, 9], [1, 3, 4, 5, 7, 8], [1, 3, 4, 5, 7, 9], [1, 3, 4, 5, 8, 9], [1, 3, 4, 6, 7, 8], [1, 3, 4, 6, 7, 9], [1, 3, 4, 6, 8, 9], [1, 3, 4, 7, 8, 9], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 7, 9], [1, 3, 5, 6, 8, 9], [1, 3, 5, 7, 8, 9], [1, 3, 6, 7, 8, 9], [1, 4, 5, 6, 7, 8], [1, 4, 5, 6, 7, 9], [1, 4, 5, 6, 8, 9], [1, 4, 5, 7, 8, 9], [1, 4, 6, 7, 8, 9], [1, 5, 6, 7, 8, 9], [2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 8], [2, 3, 4, 5, 6, 9], [2, 3, 4, 5, 7, 8], [2, 3, 4, 5, 7, 9], [2, 3, 4, 5, 8, 9], [2, 3, 4, 6, 7, 8], [2, 3, 4, 6, 7, 9], [2, 3, 4, 6, 8, 9], [2, 3, 4, 7, 8, 9], [2, 3, 5, 6, 7, 8], [2, 3, 5, 6, 7, 9], [2, 3, 5, 6, 8, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 7, 8, 9], [2, 4, 5, 6, 7, 8], [2, 4, 5, 6, 7, 9], [2, 4, 5, 6, 8, 9], [2, 4, 5, 7, 8, 9], [2, 4, 6, 7, 8, 9], [2, 5, 6, 7, 8, 9], [3, 4, 5, 6, 7, 8], [3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 8, 9], [3, 4, 5, 7, 8, 9], [3, 4, 6, 7, 8, 9], [3, 5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9]], got []",
                    "Test 8: Expected [[1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 3, 6], [1, 2, 3, 7], [1, 2, 3, 8], [1, 2, 3, 9], [1, 2, 4, 5], [1, 2, 4, 6], [1, 2, 4, 7], [1, 2, 4, 8], [1, 2, 4, 9], [1, 2, 5, 6], [1, 2, 5, 7], [1, 2, 5, 8], [1, 2, 5, 9], [1, 2, 6, 7], [1, 2, 6, 8], [1, 2, 6, 9], [1, 2, 7, 8], [1, 2, 7, 9], [1, 2, 8, 9], [1, 3, 4, 5], [1, 3, 4, 6], [1, 3, 4, 7], [1, 3, 4, 8], [1, 3, 4, 9], [1, 3, 5, 6], [1, 3, 5, 7], [1, 3, 5, 8], [1, 3, 5, 9], [1, 3, 6, 7], [1, 3, 6, 8], [1, 3, 6, 9], [1, 3, 7, 8], [1, 3, 7, 9], [1, 3, 8, 9], [1, 4, 5, 6], [1, 4, 5, 7], [1, 4, 5, 8], [1, 4, 5, 9], [1, 4, 6, 7], [1, 4, 6, 8], [1, 4, 6, 9], [1, 4, 7, 8], [1, 4, 7, 9], [1, 4, 8, 9], [1, 5, 6, 7], [1, 5, 6, 8], [1, 5, 6, 9], [1, 5, 7, 8], [1, 5, 7, 9], [1, 5, 8, 9], [1, 6, 7, 8], [1, 6, 7, 9], [1, 6, 8, 9], [1, 7, 8, 9], [2, 3, 4, 5], [2, 3, 4, 6], [2, 3, 4, 7], [2, 3, 4, 8], [2, 3, 4, 9], [2, 3, 5, 6], [2, 3, 5, 7], [2, 3, 5, 8], [2, 3, 5, 9], [2, 3, 6, 7], [2, 3, 6, 8], [2, 3, 6, 9], [2, 3, 7, 8], [2, 3, 7, 9], [2, 3, 8, 9], [2, 4, 5, 6], [2, 4, 5, 7], [2, 4, 5, 8], [2, 4, 5, 9], [2, 4, 6, 7], [2, 4, 6, 8], [2, 4, 6, 9], [2, 4, 7, 8], [2, 4, 7, 9], [2, 4, 8, 9], [2, 5, 6, 7], [2, 5, 6, 8], [2, 5, 6, 9], [2, 5, 7, 8], [2, 5, 7, 9], [2, 5, 8, 9], [2, 6, 7, 8], [2, 6, 7, 9], [2, 6, 8, 9], [2, 7, 8, 9], [3, 4, 5, 6], [3, 4, 5, 7], [3, 4, 5, 8], [3, 4, 5, 9], [3, 4, 6, 7], [3, 4, 6, 8], [3, 4, 6, 9], [3, 4, 7, 8], [3, 4, 7, 9], [3, 4, 8, 9], [3, 5, 6, 7], [3, 5, 6, 8], [3, 5, 6, 9], [3, 5, 7, 8], [3, 5, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8], [3, 6, 7, 9], [3, 6, 8, 9], [3, 7, 8, 9], [4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 9: Expected [[1], [2], [3], [4], [5], [6], [7], [8], [9]], got []",
                    "Test 10: Expected [[5, 6, 7, 8, 9, 10, 11], [5, 6, 7, 8, 9, 10, 12], [5, 6, 7, 8, 9, 11, 12], [5, 6, 7, 8, 10, 11, 12], [5, 6, 7, 9, 10, 11, 12], [5, 6, 8, 9, 10, 11, 12], [5, 7, 8, 9, 10, 11, 12], [6, 7, 8, 9, 10, 11, 12]], got []",
                    "Test 11: Expected [[]], got []",
                    "Test 12: Expected [[]], got []"
                ],
                "elapsed_time": 11.040720701217651
            },
            "to_base": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 12.45517086982727
            },
            "topological_ordering": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.061263084411621
            },
            "wrap": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.748195886611938
            }
        },
        "Claude 3.7": {
            "bitcount": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.4080512523651123
            },
            "breadth_first_search": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "test3: IndexError - pop from an empty deque"
                ],
                "elapsed_time": 0.6429510116577148
            },
            "bucketsort": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.5359697341918945
            },
            "depth_first_search": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.49497246742248535
            },
            "detect_cycle": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.7189571857452393
            },
            "find_first_in_sorted": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.570504665374756,
                "error": "Timeout after 30 seconds"
            },
            "find_in_sorted": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.4578962326049805
            },
            "flatten": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 2: Expected [], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 3: Expected [1, 1], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 4: Expected [1, 2, 3, 4], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 5: Expected [1, 4, 6], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 6: Expected ['moe', 'curly', 'larry'], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 7: Expected ['a', 'b', 'c', 'd', 'e'], got <generator object flatten at 0x00000185110FA8F0>"
                ],
                "elapsed_time": 5.194575548171997
            },
            "gcd": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.36482572555542
            },
            "get_factors": {
                "pass_rate": 1.0,
                "passed": 11,
                "total": 11,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.960375070571899
            },
            "hanoi": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 3)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 3), (1, 2), (3, 2)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 2), (1, 1), (2, 1)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 2), (3, 1), (2, 1)]"
                ],
                "elapsed_time": 2.818387985229492
            },
            "is_valid_parenthesization": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.1794121265411377
            },
            "kheapsort": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FAC70>"
                ],
                "elapsed_time": 3.435279607772827
            },
            "knapsack": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 31.656757593154907,
                "error": "Timeout after 30 seconds"
            },
            "kth": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.479920148849487
            },
            "lcs_length": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.82619857788086
            },
            "levenshtein": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 43.015456199645996,
                "error": "Timeout after 30 seconds"
            },
            "lis": {
                "pass_rate": 1.0,
                "passed": 12,
                "total": 12,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.242931365966797
            },
            "longest_common_subsequence": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 19.291399717330933
            },
            "max_sublist_sum": {
                "pass_rate": 0.8333333333333334,
                "passed": 5,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "Test 5: Expected 0, got -4"
                ],
                "elapsed_time": 6.03565788269043
            },
            "mergesort": {
                "pass_rate": 0.07142857142857142,
                "passed": 1,
                "total": 14,
                "success": false,
                "failed_tests": [
                    "Test 2: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 3: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 4: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 5: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 6: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 7: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 8: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 9: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 10: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 11: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 12: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 13: Exception - maximum recursion depth exceeded while calling a Python object",
                    "Test 14: Exception - maximum recursion depth exceeded while calling a Python object"
                ],
                "elapsed_time": 9.261280059814453
            },
            "minimum_spanning_tree": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 13.596894264221191
            },
            "next_palindrome": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.48212742805481
            },
            "next_permutation": {
                "pass_rate": 1.0,
                "passed": 8,
                "total": 8,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.5121941566467285
            },
            "node": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 1.86142897605896,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            },
            "pascal": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.708238124847412
            },
            "possible_change": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 17.812744140625
            },
            "powerset": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.50675344467163
            },
            "quicksort": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 17.48459219932556
            },
            "reverse_linked_list": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.2620460987091064
            },
            "rpn_eval": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 10.06158185005188
            },
            "shortest_path_length": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 13.945521593093872
            },
            "shortest_path_lengths": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 13.95895528793335
            },
            "shortest_paths": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.520777940750122
            },
            "shunting_yard": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.9256105422973633
            },
            "sieve": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.794632911682129
            },
            "sqrt": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.23639988899231
            },
            "subsequences": {
                "pass_rate": 0.16666666666666666,
                "passed": 2,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]], got []",
                    "Test 4: Expected [[4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 5: Expected [[4, 5, 6, 7, 8, 9]], got []",
                    "Test 6: Expected [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [3, 9], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [5, 6], [5, 7], [5, 8], [5, 9], [6, 7], [6, 8], [6, 9], [7, 8], [7, 9], [8, 9]], got []",
                    "Test 7: Expected [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 7], [1, 2, 3, 4, 5, 8], [1, 2, 3, 4, 5, 9], [1, 2, 3, 4, 6, 7], [1, 2, 3, 4, 6, 8], [1, 2, 3, 4, 6, 9], [1, 2, 3, 4, 7, 8], [1, 2, 3, 4, 7, 9], [1, 2, 3, 4, 8, 9], [1, 2, 3, 5, 6, 7], [1, 2, 3, 5, 6, 8], [1, 2, 3, 5, 6, 9], [1, 2, 3, 5, 7, 8], [1, 2, 3, 5, 7, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 7, 8], [1, 2, 3, 6, 7, 9], [1, 2, 3, 6, 8, 9], [1, 2, 3, 7, 8, 9], [1, 2, 4, 5, 6, 7], [1, 2, 4, 5, 6, 8], [1, 2, 4, 5, 6, 9], [1, 2, 4, 5, 7, 8], [1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 8, 9], [1, 2, 4, 6, 7, 8], [1, 2, 4, 6, 7, 9], [1, 2, 4, 6, 8, 9], [1, 2, 4, 7, 8, 9], [1, 2, 5, 6, 7, 8], [1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 8, 9], [1, 2, 5, 7, 8, 9], [1, 2, 6, 7, 8, 9], [1, 3, 4, 5, 6, 7], [1, 3, 4, 5, 6, 8], [1, 3, 4, 5, 6, 9], [1, 3, 4, 5, 7, 8], [1, 3, 4, 5, 7, 9], [1, 3, 4, 5, 8, 9], [1, 3, 4, 6, 7, 8], [1, 3, 4, 6, 7, 9], [1, 3, 4, 6, 8, 9], [1, 3, 4, 7, 8, 9], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 7, 9], [1, 3, 5, 6, 8, 9], [1, 3, 5, 7, 8, 9], [1, 3, 6, 7, 8, 9], [1, 4, 5, 6, 7, 8], [1, 4, 5, 6, 7, 9], [1, 4, 5, 6, 8, 9], [1, 4, 5, 7, 8, 9], [1, 4, 6, 7, 8, 9], [1, 5, 6, 7, 8, 9], [2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 8], [2, 3, 4, 5, 6, 9], [2, 3, 4, 5, 7, 8], [2, 3, 4, 5, 7, 9], [2, 3, 4, 5, 8, 9], [2, 3, 4, 6, 7, 8], [2, 3, 4, 6, 7, 9], [2, 3, 4, 6, 8, 9], [2, 3, 4, 7, 8, 9], [2, 3, 5, 6, 7, 8], [2, 3, 5, 6, 7, 9], [2, 3, 5, 6, 8, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 7, 8, 9], [2, 4, 5, 6, 7, 8], [2, 4, 5, 6, 7, 9], [2, 4, 5, 6, 8, 9], [2, 4, 5, 7, 8, 9], [2, 4, 6, 7, 8, 9], [2, 5, 6, 7, 8, 9], [3, 4, 5, 6, 7, 8], [3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 8, 9], [3, 4, 5, 7, 8, 9], [3, 4, 6, 7, 8, 9], [3, 5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9]], got []",
                    "Test 8: Expected [[1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 3, 6], [1, 2, 3, 7], [1, 2, 3, 8], [1, 2, 3, 9], [1, 2, 4, 5], [1, 2, 4, 6], [1, 2, 4, 7], [1, 2, 4, 8], [1, 2, 4, 9], [1, 2, 5, 6], [1, 2, 5, 7], [1, 2, 5, 8], [1, 2, 5, 9], [1, 2, 6, 7], [1, 2, 6, 8], [1, 2, 6, 9], [1, 2, 7, 8], [1, 2, 7, 9], [1, 2, 8, 9], [1, 3, 4, 5], [1, 3, 4, 6], [1, 3, 4, 7], [1, 3, 4, 8], [1, 3, 4, 9], [1, 3, 5, 6], [1, 3, 5, 7], [1, 3, 5, 8], [1, 3, 5, 9], [1, 3, 6, 7], [1, 3, 6, 8], [1, 3, 6, 9], [1, 3, 7, 8], [1, 3, 7, 9], [1, 3, 8, 9], [1, 4, 5, 6], [1, 4, 5, 7], [1, 4, 5, 8], [1, 4, 5, 9], [1, 4, 6, 7], [1, 4, 6, 8], [1, 4, 6, 9], [1, 4, 7, 8], [1, 4, 7, 9], [1, 4, 8, 9], [1, 5, 6, 7], [1, 5, 6, 8], [1, 5, 6, 9], [1, 5, 7, 8], [1, 5, 7, 9], [1, 5, 8, 9], [1, 6, 7, 8], [1, 6, 7, 9], [1, 6, 8, 9], [1, 7, 8, 9], [2, 3, 4, 5], [2, 3, 4, 6], [2, 3, 4, 7], [2, 3, 4, 8], [2, 3, 4, 9], [2, 3, 5, 6], [2, 3, 5, 7], [2, 3, 5, 8], [2, 3, 5, 9], [2, 3, 6, 7], [2, 3, 6, 8], [2, 3, 6, 9], [2, 3, 7, 8], [2, 3, 7, 9], [2, 3, 8, 9], [2, 4, 5, 6], [2, 4, 5, 7], [2, 4, 5, 8], [2, 4, 5, 9], [2, 4, 6, 7], [2, 4, 6, 8], [2, 4, 6, 9], [2, 4, 7, 8], [2, 4, 7, 9], [2, 4, 8, 9], [2, 5, 6, 7], [2, 5, 6, 8], [2, 5, 6, 9], [2, 5, 7, 8], [2, 5, 7, 9], [2, 5, 8, 9], [2, 6, 7, 8], [2, 6, 7, 9], [2, 6, 8, 9], [2, 7, 8, 9], [3, 4, 5, 6], [3, 4, 5, 7], [3, 4, 5, 8], [3, 4, 5, 9], [3, 4, 6, 7], [3, 4, 6, 8], [3, 4, 6, 9], [3, 4, 7, 8], [3, 4, 7, 9], [3, 4, 8, 9], [3, 5, 6, 7], [3, 5, 6, 8], [3, 5, 6, 9], [3, 5, 7, 8], [3, 5, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8], [3, 6, 7, 9], [3, 6, 8, 9], [3, 7, 8, 9], [4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 9: Expected [[1], [2], [3], [4], [5], [6], [7], [8], [9]], got []",
                    "Test 10: Expected [[5, 6, 7, 8, 9, 10, 11], [5, 6, 7, 8, 9, 10, 12], [5, 6, 7, 8, 9, 11, 12], [5, 6, 7, 8, 10, 11, 12], [5, 6, 7, 9, 10, 11, 12], [5, 6, 8, 9, 10, 11, 12], [5, 7, 8, 9, 10, 11, 12], [6, 7, 8, 9, 10, 11, 12]], got []",
                    "Test 11: Expected [[]], got []",
                    "Test 12: Expected [[]], got []"
                ],
                "elapsed_time": 17.17738103866577
            },
            "to_base": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.24556469917297363
            },
            "topological_ordering": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.860295057296753
            },
            "wrap": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 10.285897493362427
            }
        },
        "Deepseek": {
            "bitcount": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.4119691848754883
            },
            "breadth_first_search": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "test3: IndexError - pop from an empty deque"
                ],
                "elapsed_time": 0.8187952041625977
            },
            "bucketsort": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.5819563865661621
            },
            "depth_first_search": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.6139543056488037
            },
            "detect_cycle": {
                "pass_rate": 0.8333333333333334,
                "passed": 5,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "test4: AttributeError - 'NoneType' object has no attribute 'successor'"
                ],
                "elapsed_time": 0.6289510726928711
            },
            "find_first_in_sorted": {
                "pass_rate": 0.7142857142857143,
                "passed": 5,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected 2, got -1",
                    "Test 7: Expected 7, got -1"
                ],
                "elapsed_time": 1.0120761394500732
            },
            "find_in_sorted": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.9224839210510254
            },
            "flatten": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 2: Expected [], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 3: Expected [1, 1], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 4: Expected [1, 2, 3, 4], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 5: Expected [1, 4, 6], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 6: Expected ['moe', 'curly', 'larry'], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 7: Expected ['a', 'b', 'c', 'd', 'e'], got <generator object flatten at 0x00000185110FA8F0>"
                ],
                "elapsed_time": 4.235272169113159
            },
            "gcd": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.8318641185760498
            },
            "get_factors": {
                "pass_rate": 0.09090909090909091,
                "passed": 1,
                "total": 11,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [2, 2, 5, 5], got [2, 2, 5]",
                    "Test 3: Expected [101], got []",
                    "Test 4: Expected [2, 2, 2, 13], got [2, 2, 2]",
                    "Test 5: Expected [2], got []",
                    "Test 6: Expected [3], got []",
                    "Test 7: Expected [17], got []",
                    "Test 8: Expected [3, 3, 7], got [3, 3]",
                    "Test 9: Expected [2, 37], got [2]",
                    "Test 10: Expected [73], got []",
                    "Test 11: Expected [3, 3, 1093], got [3, 3]"
                ],
                "elapsed_time": 3.469585418701172
            },
            "hanoi": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 3)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 3), (1, 2), (3, 2)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 2), (1, 1), (2, 1)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 2), (3, 1), (2, 1)]"
                ],
                "elapsed_time": 2.247840642929077
            },
            "is_valid_parenthesization": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.4718191623687744
            },
            "kheapsort": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FA9D0>"
                ],
                "elapsed_time": 3.2553696632385254
            },
            "knapsack": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 32.25870490074158,
                "error": "Timeout after 30 seconds"
            },
            "kth": {
                "pass_rate": 0.2857142857142857,
                "passed": 2,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Exception - list index out of range",
                    "Test 2: Exception - list index out of range",
                    "Test 3: Exception - list index out of range",
                    "Test 6: Exception - list index out of range",
                    "Test 7: Exception - list index out of range"
                ],
                "elapsed_time": 8.439801454544067
            },
            "lcs_length": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.240259647369385
            },
            "levenshtein": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 36.21752309799194,
                "error": "Timeout after 30 seconds"
            },
            "lis": {
                "pass_rate": 0.6666666666666666,
                "passed": 8,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 9: Expected 3, got 2",
                    "Test 10: Expected 6, got 5",
                    "Test 11: Expected 3, got 1",
                    "Test 12: Expected 4, got 3"
                ],
                "elapsed_time": 23.038986682891846
            },
            "longest_common_subsequence": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.812755107879639
            },
            "max_sublist_sum": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 11.212536334991455
            },
            "mergesort": {
                "pass_rate": 1.0,
                "passed": 14,
                "total": 14,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.003373146057129
            },
            "minimum_spanning_tree": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "test1: RuntimeError - Set changed size during iteration",
                    "test2: RuntimeError - Set changed size during iteration",
                    "test3: RuntimeError - Set changed size during iteration"
                ],
                "elapsed_time": 37.377984046936035
            },
            "next_palindrome": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "Test 5: Expected [1, 0, 0, 1], got [1, 0, 0, 0, 1]"
                ],
                "elapsed_time": 13.358208179473877
            },
            "next_permutation": {
                "pass_rate": 1.0,
                "passed": 8,
                "total": 8,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.420088052749634
            },
            "node": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 9.105085134506226,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            },
            "pascal": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.213220834732056
            },
            "possible_change": {
                "pass_rate": 0.1,
                "passed": 1,
                "total": 10,
                "success": false,
                "failed_tests": [
                    "Test 2: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 3: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 4: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 5: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 6: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 7: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 8: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 9: Exception - not enough values to unpack (expected at least 1, got 0)",
                    "Test 10: Exception - not enough values to unpack (expected at least 1, got 0)"
                ],
                "elapsed_time": 7.237210035324097
            },
            "powerset": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 27.32011342048645
            },
            "quicksort": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 17.958157062530518
            },
            "reverse_linked_list": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.423747301101685
            },
            "rpn_eval": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.68222713470459
            },
            "shortest_path_length": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 10.971505880355835
            },
            "shortest_path_lengths": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 18.935714960098267
            },
            "shortest_paths": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 23.129811763763428
            },
            "shunting_yard": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.255368232727051
            },
            "sieve": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 27.975050687789917
            },
            "sqrt": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 41.725913763046265,
                "error": "Timeout after 30 seconds"
            },
            "subsequences": {
                "pass_rate": 0.16666666666666666,
                "passed": 2,
                "total": 12,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]], got []",
                    "Test 4: Expected [[4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 5: Expected [[4, 5, 6, 7, 8, 9]], got []",
                    "Test 6: Expected [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [3, 9], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [5, 6], [5, 7], [5, 8], [5, 9], [6, 7], [6, 8], [6, 9], [7, 8], [7, 9], [8, 9]], got []",
                    "Test 7: Expected [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 7], [1, 2, 3, 4, 5, 8], [1, 2, 3, 4, 5, 9], [1, 2, 3, 4, 6, 7], [1, 2, 3, 4, 6, 8], [1, 2, 3, 4, 6, 9], [1, 2, 3, 4, 7, 8], [1, 2, 3, 4, 7, 9], [1, 2, 3, 4, 8, 9], [1, 2, 3, 5, 6, 7], [1, 2, 3, 5, 6, 8], [1, 2, 3, 5, 6, 9], [1, 2, 3, 5, 7, 8], [1, 2, 3, 5, 7, 9], [1, 2, 3, 5, 8, 9], [1, 2, 3, 6, 7, 8], [1, 2, 3, 6, 7, 9], [1, 2, 3, 6, 8, 9], [1, 2, 3, 7, 8, 9], [1, 2, 4, 5, 6, 7], [1, 2, 4, 5, 6, 8], [1, 2, 4, 5, 6, 9], [1, 2, 4, 5, 7, 8], [1, 2, 4, 5, 7, 9], [1, 2, 4, 5, 8, 9], [1, 2, 4, 6, 7, 8], [1, 2, 4, 6, 7, 9], [1, 2, 4, 6, 8, 9], [1, 2, 4, 7, 8, 9], [1, 2, 5, 6, 7, 8], [1, 2, 5, 6, 7, 9], [1, 2, 5, 6, 8, 9], [1, 2, 5, 7, 8, 9], [1, 2, 6, 7, 8, 9], [1, 3, 4, 5, 6, 7], [1, 3, 4, 5, 6, 8], [1, 3, 4, 5, 6, 9], [1, 3, 4, 5, 7, 8], [1, 3, 4, 5, 7, 9], [1, 3, 4, 5, 8, 9], [1, 3, 4, 6, 7, 8], [1, 3, 4, 6, 7, 9], [1, 3, 4, 6, 8, 9], [1, 3, 4, 7, 8, 9], [1, 3, 5, 6, 7, 8], [1, 3, 5, 6, 7, 9], [1, 3, 5, 6, 8, 9], [1, 3, 5, 7, 8, 9], [1, 3, 6, 7, 8, 9], [1, 4, 5, 6, 7, 8], [1, 4, 5, 6, 7, 9], [1, 4, 5, 6, 8, 9], [1, 4, 5, 7, 8, 9], [1, 4, 6, 7, 8, 9], [1, 5, 6, 7, 8, 9], [2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 8], [2, 3, 4, 5, 6, 9], [2, 3, 4, 5, 7, 8], [2, 3, 4, 5, 7, 9], [2, 3, 4, 5, 8, 9], [2, 3, 4, 6, 7, 8], [2, 3, 4, 6, 7, 9], [2, 3, 4, 6, 8, 9], [2, 3, 4, 7, 8, 9], [2, 3, 5, 6, 7, 8], [2, 3, 5, 6, 7, 9], [2, 3, 5, 6, 8, 9], [2, 3, 5, 7, 8, 9], [2, 3, 6, 7, 8, 9], [2, 4, 5, 6, 7, 8], [2, 4, 5, 6, 7, 9], [2, 4, 5, 6, 8, 9], [2, 4, 5, 7, 8, 9], [2, 4, 6, 7, 8, 9], [2, 5, 6, 7, 8, 9], [3, 4, 5, 6, 7, 8], [3, 4, 5, 6, 7, 9], [3, 4, 5, 6, 8, 9], [3, 4, 5, 7, 8, 9], [3, 4, 6, 7, 8, 9], [3, 5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9]], got []",
                    "Test 8: Expected [[1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 3, 6], [1, 2, 3, 7], [1, 2, 3, 8], [1, 2, 3, 9], [1, 2, 4, 5], [1, 2, 4, 6], [1, 2, 4, 7], [1, 2, 4, 8], [1, 2, 4, 9], [1, 2, 5, 6], [1, 2, 5, 7], [1, 2, 5, 8], [1, 2, 5, 9], [1, 2, 6, 7], [1, 2, 6, 8], [1, 2, 6, 9], [1, 2, 7, 8], [1, 2, 7, 9], [1, 2, 8, 9], [1, 3, 4, 5], [1, 3, 4, 6], [1, 3, 4, 7], [1, 3, 4, 8], [1, 3, 4, 9], [1, 3, 5, 6], [1, 3, 5, 7], [1, 3, 5, 8], [1, 3, 5, 9], [1, 3, 6, 7], [1, 3, 6, 8], [1, 3, 6, 9], [1, 3, 7, 8], [1, 3, 7, 9], [1, 3, 8, 9], [1, 4, 5, 6], [1, 4, 5, 7], [1, 4, 5, 8], [1, 4, 5, 9], [1, 4, 6, 7], [1, 4, 6, 8], [1, 4, 6, 9], [1, 4, 7, 8], [1, 4, 7, 9], [1, 4, 8, 9], [1, 5, 6, 7], [1, 5, 6, 8], [1, 5, 6, 9], [1, 5, 7, 8], [1, 5, 7, 9], [1, 5, 8, 9], [1, 6, 7, 8], [1, 6, 7, 9], [1, 6, 8, 9], [1, 7, 8, 9], [2, 3, 4, 5], [2, 3, 4, 6], [2, 3, 4, 7], [2, 3, 4, 8], [2, 3, 4, 9], [2, 3, 5, 6], [2, 3, 5, 7], [2, 3, 5, 8], [2, 3, 5, 9], [2, 3, 6, 7], [2, 3, 6, 8], [2, 3, 6, 9], [2, 3, 7, 8], [2, 3, 7, 9], [2, 3, 8, 9], [2, 4, 5, 6], [2, 4, 5, 7], [2, 4, 5, 8], [2, 4, 5, 9], [2, 4, 6, 7], [2, 4, 6, 8], [2, 4, 6, 9], [2, 4, 7, 8], [2, 4, 7, 9], [2, 4, 8, 9], [2, 5, 6, 7], [2, 5, 6, 8], [2, 5, 6, 9], [2, 5, 7, 8], [2, 5, 7, 9], [2, 5, 8, 9], [2, 6, 7, 8], [2, 6, 7, 9], [2, 6, 8, 9], [2, 7, 8, 9], [3, 4, 5, 6], [3, 4, 5, 7], [3, 4, 5, 8], [3, 4, 5, 9], [3, 4, 6, 7], [3, 4, 6, 8], [3, 4, 6, 9], [3, 4, 7, 8], [3, 4, 7, 9], [3, 4, 8, 9], [3, 5, 6, 7], [3, 5, 6, 8], [3, 5, 6, 9], [3, 5, 7, 8], [3, 5, 7, 9], [3, 5, 8, 9], [3, 6, 7, 8], [3, 6, 7, 9], [3, 6, 8, 9], [3, 7, 8, 9], [4, 5, 6, 7], [4, 5, 6, 8], [4, 5, 6, 9], [4, 5, 7, 8], [4, 5, 7, 9], [4, 5, 8, 9], [4, 6, 7, 8], [4, 6, 7, 9], [4, 6, 8, 9], [4, 7, 8, 9], [5, 6, 7, 8], [5, 6, 7, 9], [5, 6, 8, 9], [5, 7, 8, 9], [6, 7, 8, 9]], got []",
                    "Test 9: Expected [[1], [2], [3], [4], [5], [6], [7], [8], [9]], got []",
                    "Test 10: Expected [[5, 6, 7, 8, 9, 10, 11], [5, 6, 7, 8, 9, 10, 12], [5, 6, 7, 8, 9, 11, 12], [5, 6, 7, 8, 10, 11, 12], [5, 6, 7, 9, 10, 11, 12], [5, 6, 8, 9, 10, 11, 12], [5, 7, 8, 9, 10, 11, 12], [6, 7, 8, 9, 10, 11, 12]], got []",
                    "Test 11: Expected [[]], got []",
                    "Test 12: Expected [[]], got []"
                ],
                "elapsed_time": 15.479794025421143
            },
            "to_base": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 3.7303218841552734
            },
            "topological_ordering": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.4129087924957275
            },
            "wrap": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 11.60174822807312
            }
        },
        "O3-Mini": {
            "bitcount": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.2509794235229492
            },
            "breadth_first_search": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.5969491004943848
            },
            "bucketsort": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.28197407722473145
            },
            "depth_first_search": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.48195648193359375
            },
            "detect_cycle": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.6459400653839111
            },
            "find_first_in_sorted": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.2903892993927002
            },
            "find_in_sorted": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.9401290416717529
            },
            "flatten": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 7,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 2: Expected [], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 3: Expected [1, 1], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 4: Expected [1, 2, 3, 4], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 5: Expected [1, 4, 6], got <generator object flatten at 0x00000185110FA8F0>",
                    "Test 6: Expected ['moe', 'curly', 'larry'], got <generator object flatten at 0x00000185110FAB20>",
                    "Test 7: Expected ['a', 'b', 'c', 'd', 'e'], got <generator object flatten at 0x00000185110FA8F0>"
                ],
                "elapsed_time": 4.6216511726379395
            },
            "gcd": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.8437850475311279
            },
            "get_factors": {
                "pass_rate": 1.0,
                "passed": 11,
                "total": 11,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.7390620708465576
            },
            "hanoi": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 3)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 3), (1, 2), (3, 2)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 2), (1, 1), (2, 1)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 2), (3, 1), (2, 1)]"
                ],
                "elapsed_time": 2.772796869277954
            },
            "is_valid_parenthesization": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.192821741104126
            },
            "kheapsort": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FAC70>"
                ],
                "elapsed_time": 1.69203519821167
            },
            "knapsack": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 32.440934896469116,
                "error": "Timeout after 30 seconds"
            },
            "kth": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 3.255850315093994
            },
            "lcs_length": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 3.2370216846466064
            },
            "levenshtein": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.732017278671265,
                "error": "Timeout after 30 seconds"
            },
            "lis": {
                "pass_rate": 1.0,
                "passed": 12,
                "total": 12,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 3.95855712890625
            },
            "longest_common_subsequence": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.53066349029541
            },
            "max_sublist_sum": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 12.65541696548462
            },
            "mergesort": {
                "pass_rate": 1.0,
                "passed": 14,
                "total": 14,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.216119050979614
            },
            "minimum_spanning_tree": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.676922798156738
            },
            "next_palindrome": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.77060079574585
            },
            "next_permutation": {
                "pass_rate": 1.0,
                "passed": 8,
                "total": 8,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.969744443893433
            },
            "node": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 5.49877667427063,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            },
            "pascal": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.7519562244415283
            },
            "possible_change": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.974000930786133
            },
            "powerset": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.023864269256592
            },
            "quicksort": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.283369064331055
            },
            "reverse_linked_list": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.195421934127808
            },
            "rpn_eval": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 10.91361665725708
            },
            "shortest_path_length": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.188802242279053
            },
            "shortest_path_lengths": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 23.05413556098938
            },
            "shortest_paths": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 28.779543161392212
            },
            "shunting_yard": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.179935693740845
            },
            "sieve": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 13.318517923355103
            },
            "sqrt": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.580106496810913
            },
            "subsequences": {
                "pass_rate": 1.0,
                "passed": 12,
                "total": 12,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.9325990676879883
            },
            "to_base": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.88571310043335
            },
            "topological_ordering": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.921659469604492
            },
            "wrap": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.365305185317993
            }
        },
        "O4-Mini": {
            "bitcount": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.48297929763793945
            },
            "breadth_first_search": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.7839481830596924
            },
            "bucketsort": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.6359522342681885
            },
            "depth_first_search": {
                "pass_rate": 0.8,
                "passed": 4,
                "total": 5,
                "success": false,
                "failed_tests": [
                    "test5: RecursionError - maximum recursion depth exceeded in comparison"
                ],
                "elapsed_time": 0.42397379875183105
            },
            "detect_cycle": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.40697216987609863
            },
            "find_first_in_sorted": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 30.86481547355652,
                "error": "Timeout after 30 seconds"
            },
            "find_in_sorted": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 3.9930059909820557
            },
            "flatten": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.224471807479858
            },
            "gcd": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.167839288711548
            },
            "get_factors": {
                "pass_rate": 1.0,
                "passed": 11,
                "total": 11,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 0.5548312664031982
            },
            "hanoi": {
                "pass_rate": 0.125,
                "passed": 1,
                "total": 8,
                "success": false,
                "failed_tests": [
                    "Test 2: Expected [[1, 3]], got [(1, 3)]",
                    "Test 3: Expected [[1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3)]",
                    "Test 4: Expected [[1, 3], [1, 2], [3, 2], [1, 3], [2, 1], [2, 3], [1, 3]], got [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)]",
                    "Test 5: Expected [[1, 2], [1, 3], [2, 3], [1, 2], [3, 1], [3, 2], [1, 2], [1, 3], [2, 3], [2, 1], [3, 1], [2, 3], [1, 2], [1, 3], [2, 3]], got [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]",
                    "Test 6: Expected [[1, 3], [1, 2], [3, 2]], got [(1, 3), (1, 2), (3, 2)]",
                    "Test 7: Expected [[1, 2], [1, 1], [2, 1]], got [(1, 2), (1, 1), (2, 1)]",
                    "Test 8: Expected [[3, 2], [3, 1], [2, 1]], got [(3, 2), (3, 1), (2, 1)]"
                ],
                "elapsed_time": 3.4037482738494873
            },
            "is_valid_parenthesization": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 1.157923698425293
            },
            "kheapsort": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "Test 1: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 2: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FA9D0>",
                    "Test 3: Expected [1, 2, 3, 4, 5], got <generator object kheapsort at 0x00000185110FAC70>",
                    "Test 4: Expected [1, 3, 5, 6, 12], got <generator object kheapsort at 0x00000185110FA9D0>"
                ],
                "elapsed_time": 3.2583506107330322
            },
            "knapsack": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 34.05847883224487,
                "error": "Timeout after 30 seconds"
            },
            "kth": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 9.154221296310425
            },
            "lcs_length": {
                "pass_rate": 1.0,
                "passed": 9,
                "total": 9,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.9676597118377686
            },
            "levenshtein": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 34.64380669593811,
                "error": "Timeout after 30 seconds"
            },
            "lis": {
                "pass_rate": 1.0,
                "passed": 12,
                "total": 12,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 11.323349237442017
            },
            "longest_common_subsequence": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 23.3413348197937
            },
            "max_sublist_sum": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.432075262069702
            },
            "mergesort": {
                "pass_rate": 1.0,
                "passed": 14,
                "total": 14,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.458911180496216
            },
            "minimum_spanning_tree": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 3,
                "success": false,
                "failed_tests": [
                    "test1: RuntimeError - Set changed size during iteration",
                    "test2: RuntimeError - Set changed size during iteration",
                    "test3: RuntimeError - Set changed size during iteration"
                ],
                "elapsed_time": 23.051825761795044
            },
            "next_palindrome": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.881778001785278
            },
            "next_permutation": {
                "pass_rate": 1.0,
                "passed": 8,
                "total": 8,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 7.663089990615845
            },
            "node": {
                "pass_rate": 0,
                "passed": 0,
                "total": 0,
                "success": false,
                "failed_tests": [],
                "elapsed_time": 6.233888864517212,
                "error": "JSON test cases not found: c:\\Users\\Kushal Khemka\\Downloads\\Agentic AI\\Code-Refactoring-QuixBugs\\json_testcases\\node.json"
            },
            "pascal": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 14.18605899810791
            },
            "possible_change": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 21.75093364715576
            },
            "powerset": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 5.882094144821167
            },
            "quicksort": {
                "pass_rate": 1.0,
                "passed": 13,
                "total": 13,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 6.812443971633911
            },
            "reverse_linked_list": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 8.654613494873047
            },
            "rpn_eval": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 20.541259050369263
            },
            "shortest_path_length": {
                "pass_rate": 0.5,
                "passed": 2,
                "total": 4,
                "success": false,
                "failed_tests": [
                    "test1: AssertionError - ",
                    "test2: AssertionError - "
                ],
                "elapsed_time": 12.678296327590942
            },
            "shortest_path_lengths": {
                "pass_rate": 1.0,
                "passed": 4,
                "total": 4,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 909.5144577026367
            },
            "shortest_paths": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 19.151514768600464
            },
            "shunting_yard": {
                "pass_rate": 1.0,
                "passed": 6,
                "total": 6,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.10043478012085
            },
            "sieve": {
                "pass_rate": 0.0,
                "passed": 0,
                "total": 6,
                "success": false,
                "failed_tests": [
                    "Test 1: Exception - 'list' object has no attribute 'merge_two_sorted_lists'",
                    "Test 2: Exception - 'list' object has no attribute 'merge_two_sorted_lists'",
                    "Test 3: Exception - 'list' object has no attribute 'merge_two_sorted_lists'",
                    "Test 4: Exception - 'list' object has no attribute 'merge_two_sorted_lists'",
                    "Test 5: Exception - 'list' object has no attribute 'merge_two_sorted_lists'",
                    "Test 6: Exception - 'list' object has no attribute 'merge_two_sorted_lists'"
                ],
                "elapsed_time": 18.249276399612427
            },
            "sqrt": {
                "pass_rate": 1.0,
                "passed": 7,
                "total": 7,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 2.2492239475250244
            },
            "subsequences": {
                "pass_rate": 1.0,
                "passed": 12,
                "total": 12,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 15.886828899383545
            },
            "to_base": {
                "pass_rate": 1.0,
                "passed": 10,
                "total": 10,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 18.93295931816101
            },
            "topological_ordering": {
                "pass_rate": 1.0,
                "passed": 3,
                "total": 3,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 19.486507415771484
            },
            "wrap": {
                "pass_rate": 1.0,
                "passed": 5,
                "total": 5,
                "success": true,
                "failed_tests": [],
                "elapsed_time": 4.685679912567139
            }
        }
    }
}